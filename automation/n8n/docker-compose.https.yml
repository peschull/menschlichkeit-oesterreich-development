# n8n HTTPS Setup mit Caddy Reverse Proxy
# Für Menschlichkeit Österreich - DSGVO Art. 32 konform

version: "3.8"

services:
  # Caddy Reverse Proxy mit automatischen HTTPS Zertifikaten
  caddy:
    image: caddy:2-alpine
    container_name: moe-n8n-caddy
    restart: unless-stopped
    ports:
      - "443:443"    # HTTPS
      - "80:80"      # HTTP (für Let's Encrypt Challenge & Redirect)
    environment:
      - N8N_DOMAIN=${N8N_DOMAIN:-n8n.menschlichkeit-oesterreich.at}
      - ACME_EMAIL=${ACME_EMAIL:-peter.schuller@menschlichkeit-oesterreich.at}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - moe-automation
    depends_on:
      - n8n

  # n8n Workflow Automation (nur intern erreichbar)
  n8n:
    image: n8nio/n8n:latest
    container_name: moe-n8n
    restart: unless-stopped
    environment:
      # Basic Auth (zusätzlich zu Caddy HTTPS)
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-changeme123}
      
      # HTTPS Konfiguration
      - N8N_HOST=${N8N_DOMAIN:-n8n.menschlichkeit-oesterreich.at}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - WEBHOOK_URL=https://${N8N_DOMAIN:-n8n.menschlichkeit-oesterreich.at}
      
      # Timezone & Metrics
      - GENERIC_TIMEZONE=Europe/Vienna
      - N8N_METRICS=true
      - N8N_DIAGNOSTICS_ENABLED=false
      
      # Integration mit bestehenden Services
      - MOE_API_URL=http://host.docker.internal:8001
      - MOE_CRM_URL=http://host.docker.internal:8000
      - MOE_FRONTEND_URL=http://host.docker.internal:3000
      
      # Plesk Integration
      - PLESK_HOST=${PLESK_HOST:-plesk}
      - PLESK_USER=${PLESK_USER:-dmpl20230054}
      
      # Database Connection
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres-n8n
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n_user
      - DB_POSTGRESDB_PASSWORD=${N8N_DB_PASSWORD:-n8n_secure_pass}
      
      # Redis Queue
      - QUEUE_BULL_REDIS_HOST=redis-n8n
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD:-redis123}
    
    # KEIN Port-Expose - nur über Caddy erreichbar
    expose:
      - "5678"
    
    volumes:
      - n8n_data:/home/node/.n8n
      - ./workflows:/home/node/.n8n/workflows:ro
      - ./credentials:/home/node/.n8n/credentials:ro
      - ../scripts:/scripts:ro
    
    networks:
      - moe-automation
      - moe-network
    
    extra_hosts:
      - "host.docker.internal:host-gateway"
    
    depends_on:
      - postgres-n8n
      - redis-n8n

  # Redis für n8n Caching und Queue
  redis-n8n:
    image: redis:7-alpine
    container_name: moe-n8n-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_n8n_data:/data
    networks:
      - moe-automation

  # PostgreSQL für n8n Datenbank
  postgres-n8n:
    image: postgres:15-alpine
    container_name: moe-n8n-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n_user
      - POSTGRES_PASSWORD=${N8N_DB_PASSWORD:-n8n_secure_pass}
    volumes:
      - postgres_n8n_data:/var/lib/postgresql/data
    networks:
      - moe-automation

volumes:
  n8n_data:
  redis_n8n_data:
  postgres_n8n_data:
  caddy_data:   # Let's Encrypt Zertifikate
  caddy_config: # Caddy Konfiguration

networks:
  moe-automation:
    driver: bridge
  moe-network:
    external: true
