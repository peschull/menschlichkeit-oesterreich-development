{
  "name": "Queue Monitor & Alert",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            { "mode": "everyMinute" }
          ]
        }
      },
      "id": "cron",
      "name": "Cron",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1.1,
      "position": [200, 280]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "={{ $env.MOE_API_URL }}/queue/stats",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            { "name": "Authorization", "value": "Bearer {{ $env.MOE_API_TOKEN }}" }
          ]
        }
      },
      "id": "stats",
      "name": "Fetch Stats",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [420, 280]
    },
    {
      "parameters": {
        "conditions": {
          "options": { "caseSensitive": true, "typeValidation": "strict" },
          "conditions": [
            {
              "leftValue": "={{ $json.data.dlq.size }}",
              "rightValue": "={{ Number($env.QUEUE_ALERT_DLQ_SIZE || 0) }}",
              "operator": { "type": "number", "operation": "larger" },
              "id": "dlq-gt"
            },
            {
              "leftValue": "={{ $json.data.main.oldest_age_seconds || 0 }}",
              "rightValue": "={{ Number($env.QUEUE_ALERT_MAX_AGE_SECONDS || 600) }}",
              "operator": { "type": "number", "operation": "larger" },
              "id": "age-gt"
            }
          ],
          "combinator": "or"
        }
      },
      "id": "needs-alert",
      "name": "Needs Alert?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [640, 280]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $env.QUEUE_ALERT_SLACK_WEBHOOK }}",
        "sendBody": true,
        "jsonBody": true,
        "bodyParametersJson": "={{ { text: 'Queue Alert: DLQ=' + ($json.data.dlq.size || 0) + ', oldest_age=' + ($json.data.main.oldest_age_seconds || 0) + 's' } }}"
      },
      "id": "slack",
      "name": "Slack Alert",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [860, 260]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $env.MOE_API_URL }}/alerts/email",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            { "name": "Content-Type", "value": "application/json" },
            { "name": "Authorization", "value": "Bearer {{ $env.MOE_API_TOKEN }}" }
          ]
        },
        "sendBody": true,
        "jsonBody": true,
        "bodyParametersJson": "={{ { to: ($env.QUEUE_ALERT_EMAIL_TO || $env.ADMIN_EMAIL), subject: 'Queue Alert', text: 'DLQ=' + ($json.data.dlq.size || 0) + ', oldest_age=' + ($json.data.main.oldest_age_seconds || 0) + 's' } }}"
      },
      "id": "email",
      "name": "Email Alert",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [860, 340]
    }
  ],
  "connections": {
    "Cron": { "main": [[{ "node": "Fetch Stats", "type": "main", "index": 0 }]] },
    "Fetch Stats": { "main": [[{ "node": "Needs Alert?", "type": "main", "index": 0 }]] },
    "Needs Alert?": { "main": [[{ "node": "Slack Alert", "type": "main", "index": 0 }, { "node": "Email Alert", "type": "main", "index": 0 }]] }
  }
}
