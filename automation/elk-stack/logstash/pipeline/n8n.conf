#############################################################################
# Logstash Pipeline: n8n Workflow Logs
# Purpose: Process n8n JSON logs (PII-sanitized via Phase 3 Custom Node)
#############################################################################

input {
  pipeline {
    address => "n8n"
  }
}

#############################################################################
# FILTER: Parse JSON + Extract n8n Fields
#############################################################################
filter {
  # Parse JSON payload
  if [message] =~ /^\{.*\}$/ {
    json {
      source => "message"
      target => "n8n_data"
    }
  }
  
  # Extract Standard Fields
  if [n8n_data] {
    mutate {
      add_field => {
        "service" => "n8n"
        "level" => "%{[n8n_data][level]}"
        "workflow_id" => "%{[n8n_data][workflow_id]}"
        "node_name" => "%{[n8n_data][node_name]}"
        "execution_id" => "%{[n8n_data][execution_id]}"
      }
    }
    
    # Extract PII Metrics (from PII Sanitizer Node)
    if [n8n_data][metrics] {
      mutate {
        add_field => {
          "pii_emails_redacted" => "%{[n8n_data][metrics][emails_redacted]}"
          "pii_cards_redacted" => "%{[n8n_data][metrics][cards_redacted]}"
          "pii_ibans_redacted" => "%{[n8n_data][metrics][ibans_redacted]}"
          "pii_phones_redacted" => "%{[n8n_data][metrics][phones_redacted]}"
          "pii_total_detected" => "%{[n8n_data][metrics][total_pii_detected]}"
        }
      }
    }
    
    # Replace message
    mutate {
      replace => { "message" => "%{[n8n_data][message]}" }
    }
  }
  
  # Environment Detection
  if "stg" in [host][name] or "staging" in [host][name] {
    mutate { add_field => { "environment" => "staging" } }
  }
  else {
    mutate { add_field => { "environment" => "production" } }
  }
  
  # Clean Up
  mutate {
    remove_field => ["n8n_data"]
  }
}

#############################################################################
# OUTPUT: Elasticsearch
#############################################################################
output {
  # Send to Operational Logs Index
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    user => "elastic"
    password => "${ELASTICSEARCH_PASSWORD}"
    index => "logs-operational-%{+YYYY.MM.dd}"
    data_stream => false
  }
  
  # If PII Metrics Present â†’ Send to Compliance Index (for DSGVO reporting)
  if [pii_total_detected] and [pii_total_detected] != "0" {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      user => "elastic"
      password => "${ELASTICSEARCH_PASSWORD}"
      index => "logs-compliance-%{+YYYY.MM.dd}"
      data_stream => false
    }
  }
}
