{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "🚀 Dev: Start All Services",
      "type": "shell",
      "command": "npm",
      "args": ["run", "dev:all"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "group": "development"
      },
      "problemMatcher": [],
      "runOptions": {
        "runOn": "folderOpen"
      }
    },
    {
      "label": "🔍 Quality: Run All Gates",
      "type": "shell",
      "command": "npm",
      "args": ["run", "quality:gates"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "quality"
      },
      "problemMatcher": ["$eslint-stylish"]
    },
    {
      "label": "🛡️ Security: Full Scan",
      "type": "shell",
      "command": "npm",
      "args": ["run", "security:scan"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "security"
      },
      "problemMatcher": []
    },
    {
      "label": "🏗️ Build: Production Pipeline",
      "type": "shell",
      "command": "./build-pipeline.sh",
      "args": ["production"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "build"
      },
      "problemMatcher": ["$eslint-stylish", "$tsc"]
    },
    {
      "label": "🧪 Test: E2E Playwright",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test:e2e"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "testing"
      },
      "problemMatcher": []
    },
    {
      "label": "📊 Performance: Lighthouse Audit",
      "type": "shell",
      "command": "npm",
      "args": ["run", "performance:lighthouse"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "performance"
      },
      "problemMatcher": []
    },
    {
      "label": "🔄 n8n: Start Automation",
      "type": "shell",
      "command": "npm",
      "args": ["run", "n8n:start"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "group": "automation"
      },
      "problemMatcher": [],
      "isBackground": true
    },
    {
      "label": "🗄️ Database: Prisma Generate",
      "type": "shell",
      "command": "npx",
      "args": ["prisma", "generate"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "group": "database"
      },
      "problemMatcher": []
    },
    {
      "label": "🚢 Deploy: Dry Run",
      "type": "shell",
      "command": "./scripts/safe-deploy.sh",
      "args": ["--dry-run"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "deployment"
      },
      "problemMatcher": []
    },
    {
      "label": "📋 Reports: Generate Quality Reports",
      "type": "shell",
      "command": "npm",
      "args": ["run", "quality:reports"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "reports"
      },
      "problemMatcher": []
    }
    ,
    {
      "label": "🎨 Figma: Extract File Key",
      "type": "shell",
      "command": "npm",
      "args": [
        "run",
        "figma:filekey",
        "--",
        "${input:figmaUrl}"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "design"
      },
      "problemMatcher": []
    },
    {
      "label": "🎨 Figma: Extract Node ID",
      "type": "shell",
      "command": "npm",
      "args": [
        "run",
        "figma:nodeid",
        "--",
        "${input:figmaUrl}"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "design"
      },
      "problemMatcher": []
    }
  ],
  "inputs": [
    {
      "id": "figmaUrl",
      "type": "promptString",
      "description": "Figma URL (file or node link)",
      "default": "https://www.figma.com/file/mTlUSy9BQk4326cvwNa8zQ?node-id=1%3A2"
    }
  ]
}
