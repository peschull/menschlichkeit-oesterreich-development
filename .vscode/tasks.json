{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "🚀 Dev: Start All Services",
      "type": "shell",
      "command": "npm",
      "args": ["run", "dev:all"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "group": "development"
      },
      "problemMatcher": [],
      "runOptions": {
        "runOn": "folderOpen"
      }
    },
    {
      "label": "🎨 Dev: Frontend Only",
      "type": "shell",
      "command": "npm",
      "args": ["run", "dev:frontend"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "group": "development"
      },
      "problemMatcher": ["$tsc-watch"]
    },
    {
      "label": "🐍 Dev: API Only",
      "type": "shell",
      "command": "npm",
      "args": ["run", "dev:api"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "group": "development"
      },
      "problemMatcher": []
    },
    {
      "label": "🏥 Dev: CRM Only",
      "type": "shell",
      "command": "npm",
      "args": ["run", "dev:crm"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "group": "development"
      },
      "problemMatcher": []
    },
    {
      "label": "🎮 Dev: Games Only",
      "type": "shell",
      "command": "npm",
      "args": ["run", "dev:games"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "group": "development"
      },
      "problemMatcher": []
    },
    {
      "label": "🔍 Quality: Run All Gates",
      "type": "shell",
      "command": "npm",
      "args": ["run", "quality:gates"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "quality"
      },
      "problemMatcher": ["$eslint-stylish"]
    },
    {
      "label": "� Quality: Coverage Report",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test:coverage"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "quality"
      },
      "problemMatcher": []
    },
    {
      "label": "🔧 Quality: Lint All",
      "type": "shell",
      "command": "npm",
      "args": ["run", "lint"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "quality"
      },
      "problemMatcher": ["$eslint-stylish"]
    },
    {
      "label": "🔨 Quality: Lint Fix",
      "type": "shell",
      "command": "npm",
      "args": ["run", "lint:fix"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "quality"
      },
      "problemMatcher": ["$eslint-stylish"]
    },
    {
      "label": "🛡️ Security: Full Scan",
      "type": "shell",
      "command": "npm",
      "args": ["run", "security:scan"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "security"
      },
      "problemMatcher": []
    },
    {
      "label": "🔐 Security: Trivy Scan",
      "type": "shell",
      "command": "npm",
      "args": ["run", "security:trivy"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "security"
      },
      "problemMatcher": []
    },
    {
      "label": "🔑 Security: Gitleaks Scan",
      "type": "shell",
      "command": "npm",
      "args": ["run", "security:gitleaks"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "security"
      },
      "problemMatcher": []
    },
    {
      "label": "🧪 Test: Unit Tests",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test:unit"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "testing"
      },
      "problemMatcher": []
    },
    {
      "label": "🧪 Test: E2E Playwright",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test:e2e"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "testing"
      },
      "problemMatcher": []
    },
    {
      "label": "� Test: Python PII Sanitizer",
      "type": "shell",
      "command": "python3",
      "args": ["-m", "pytest", "-q", "tests/test_pii_sanitizer.py"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "testing"
      },
      "problemMatcher": []
    },
    {
      "label": "�📊 Performance: Lighthouse Audit",
      "type": "shell",
      "command": "npm",
      "args": ["run", "performance:lighthouse"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "performance"
      },
      "problemMatcher": []
    },
    {
      "label": "🏗️ Build: Production Pipeline",
      "type": "shell",
      "command": "./build-pipeline.sh",
      "args": ["production"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "build"
      },
      "problemMatcher": ["$eslint-stylish", "$tsc"]
    },
    {
      "label": "🏗️ Build: Staging Pipeline",
      "type": "shell",
      "command": "./build-pipeline.sh",
      "args": ["staging"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "build"
      },
      "problemMatcher": ["$eslint-stylish", "$tsc"]
    },
    {
      "label": "🗄️ Database: Prisma Generate",
      "type": "shell",
      "command": "npx",
      "args": ["prisma", "generate"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "group": "database"
      },
      "problemMatcher": []
    },
    {
      "label": "🗄️ Database: Prisma Migrate Dev",
      "type": "shell",
      "command": "npx",
      "args": ["prisma", "migrate", "dev"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "database"
      },
      "problemMatcher": []
    },
    {
      "label": "🗄️ Database: Alembic Upgrade",
      "type": "shell",
      "command": "cd api.menschlichkeit-oesterreich.at && alembic upgrade head",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "database"
      },
      "problemMatcher": []
    },
    {
      "label": "🚢 Deploy: Dry Run",
      "type": "shell",
      "command": "./scripts/safe-deploy.sh",
      "args": ["--dry-run"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "deployment"
      },
      "problemMatcher": []
    },
    {
      "label": "🚢 Deploy: Multi-Service",
      "type": "shell",
      "command": "npm",
      "args": ["run", "deploy:multi-service"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "deployment"
      },
      "problemMatcher": []
    },
    {
      "label": "🔄 n8n: Start Automation",
      "type": "shell",
      "command": "npm",
      "args": ["run", "n8n:start"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "group": "automation"
      },
      "problemMatcher": [],
      "isBackground": true
    },
    {
      "label": "🎨 Design: Sync Figma Tokens",
      "type": "shell",
      "command": "npm",
      "args": ["run", "figma:sync"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "design"
      },
      "problemMatcher": []
    },
    {
      "label": "🤖 MCP: Health Check",
      "type": "shell",
      "command": "npm",
      "args": ["run", "mcp:check"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "mcp"
      },
      "problemMatcher": []
    },
    {
      "label": "🤖 MCP: Setup",
      "type": "shell",
      "command": "npm",
      "args": ["run", "mcp:setup"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "mcp"
      },
      "problemMatcher": []
    },
    {
      "label": "📋 Reports: Generate Quality Reports",
      "type": "shell",
      "command": "npm",
      "args": ["run", "quality:reports"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "reports"
      },
      "problemMatcher": []
    },
    {
      "label": "🔍 DSGVO: Check PII Sanitizer",
      "type": "shell",
      "command": "python3",
      "args": ["-m", "pytest", "-v", "tests/test_pii_sanitizer.py::TestLoggingFilter"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "dsgvo"
      },
      "problemMatcher": []
    },
    {
      "label": "📦 Setup: Initial Dev Setup",
      "type": "shell",
      "command": "npm",
      "args": ["run", "setup:dev"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "setup"
      },
      "problemMatcher": []
    },
    {
      "label": "🔄 Pipeline: Pre-PR Gates",
      "type": "shell",
      "dependsOn": [
        "🔧 Quality: Lint All",
        "🧪 Test: Unit Tests",
        "🛡️ Security: Gitleaks Scan",
        "🐍 Test: Python PII Sanitizer"
      ],
      "dependsOrder": "sequence",
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "pipeline"
      },
      "problemMatcher": []
    }
  ]
}
