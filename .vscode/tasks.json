{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "üöÄ Dev: Start All Services",
      "type": "shell",
      "command": "npm",
      "args": ["run", "dev:all"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "group": "development"
      },
      "problemMatcher": [],
      "runOptions": {
        "runOn": "folderOpen"
      }
    },
    {
      "label": "üîç Quality: Run All Gates",
      "type": "shell",
      "command": "npm",
      "args": ["run", "quality:gates"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "quality"
      },
      "problemMatcher": ["$eslint-stylish"]
    },
    {
      "label": "üõ°Ô∏è Security: Full Scan",
      "type": "shell",
      "command": "npm",
      "args": ["run", "security:scan"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "security"
      },
      "problemMatcher": []
    },
    {
      "label": "üèóÔ∏è Build: Production Pipeline",
      "type": "shell",
      "command": "./build-pipeline.sh",
      "args": ["production"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "build"
      },
      "problemMatcher": ["$eslint-stylish", "$tsc"]
    },
    {
      "label": "üß™ Test: E2E Playwright",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test:e2e"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "testing"
      },
      "problemMatcher": []
    },
    {
      "label": "üìä Performance: Lighthouse Audit",
      "type": "shell",
      "command": "npm",
      "args": ["run", "performance:lighthouse"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "performance"
      },
      "problemMatcher": []
    },
    {
      "label": "üîÑ n8n: Start Automation",
      "type": "shell",
      "command": "npm",
      "args": ["run", "n8n:start"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "group": "automation"
      },
      "problemMatcher": [],
      "isBackground": true
    },
    {
      "label": "üóÑÔ∏è Database: Prisma Generate",
      "type": "shell",
      "command": "npx",
      "args": ["prisma", "generate"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "group": "database"
      },
      "problemMatcher": []
    },
    {
      "label": "üö¢ Deploy: Dry Run",
      "type": "shell",
      "command": "./scripts/safe-deploy.sh",
      "args": ["--dry-run"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "deployment"
      },
      "problemMatcher": []
    },
    {
      "label": "üìã Reports: Generate Quality Reports",
      "type": "shell",
      "command": "npm",
      "args": ["run", "quality:reports"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "reports"
      },
      "problemMatcher": []
    },
    {
      "label": "üõ°Ô∏è Security: Trivy FS Scan",
      "type": "shell",
      "command": "trivy",
      "args": ["fs", "--format", "sarif", "--output", "quality-reports/trivy-security.sarif", "."],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "security"
      },
      "problemMatcher": []
    },
    {
      "label": "üõ°Ô∏è Security: Gitleaks Secrets Scan",
      "type": "shell",
      "command": "gitleaks",
      "args": ["detect", "--report-path", "quality-reports/secrets-scan.json", "--report-format", "json"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "security"
      },
      "problemMatcher": []
    },
    {
      "label": "üîç Code Quality: Codacy Docker Analyze",
      "type": "shell",
      "command": "npm",
      "args": ["run", "quality:codacy"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "quality"
      },
      "problemMatcher": []
    },
    {
      "label": "Plesk: Verbindung testen",
      "type": "shell",
      "command": "ssh -v plesk-prod-cs",
      "problemMatcher": []
    },
    {
      "label": "Plesk: Deploy httpdocs (rsync)",
      "type": "shell",
      "command": "rsync -avz --delete ./site/ plesk-prod-cs:/var/www/vhosts/menschlichkeit-oesterreich.at/httpdocs/",
      "problemMatcher": []
    },
    {
      "label": "üîê GPG: Export Keys",
      "type": "shell",
      "command": "bash",
      "args": ["scripts/gpg/export-keys.sh"],
      "group": "none",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "security"
      },
      "problemMatcher": []
    },
    {
      "label": "üîê GPG: Verify Signature (README)",
      "type": "shell",
      "command": "bash",
      "args": ["scripts/gpg/verify-signature.sh", "README.md", "README.md.asc"],
      "group": "none",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "security"
      },
      "problemMatcher": []
    },
    {
      "label": "üîß GitHub: Repository Settings Update",
      "type": "shell",
      "command": "bash",
      "args": ["scripts/gh/repo-settings.sh"],
      "group": "none",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "github"
      },
      "problemMatcher": []
    },
    {
      "label": "üîó GitHub: Setup n8n Webhook",
      "type": "shell",
      "command": "bash",
      "args": ["scripts/gh/webhook-setup.sh"],
      "group": "none",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "github"
      },
      "problemMatcher": []
    },
    {
      "label": "üîÑ GitHub: Sync Secret (PowerShell)",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-File",
        "${workspaceFolder}/scripts/gh/secret-sync.ps1",
        "-SecretName",
        "${input:secretName}",
        "-TargetRepo",
        "${input:targetRepo}"
      ],
      "group": "none",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "github"
      },
      "problemMatcher": []
    },
    {
      "label": "üêô GitHub: Auth Status",
      "type": "shell",
      "command": "gh",
      "args": ["auth", "status"],
      "group": "none",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "github"
      },
      "problemMatcher": []
    },
    {
      "label": "üêô GitHub: List Repos",
      "type": "shell",
      "command": "gh",
      "args": [
        "repo",
        "list",
        "--limit",
        "50",
        "--json",
        "name,visibility,updatedAt"
      ],
      "group": "none",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "github"
      },
      "problemMatcher": []
    },
    {
      "label": "üêô GitHub: List Open Issues",
      "type": "shell",
      "command": "gh",
      "args": [
        "issue",
        "list",
        "--state",
        "open",
        "--json",
        "number,title,labels,createdAt"
      ],
      "group": "none",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "github"
      },
      "problemMatcher": []
    },
    {
      "label": "üêô GitHub: Validate Token",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-File",
        "${workspaceFolder}/scripts/gh/Run-GitHubTokenValidation.ps1"
      ],
      "group": "none",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "group": "github"
      },
      "problemMatcher": []
    }
  ],
  "inputs": [
    {
      "id": "secretName",
      "type": "promptString",
      "description": "Secret-Name (z.B. DATABASE_URL, GH_TOKEN)"
    },
    {
      "id": "targetRepo",
      "type": "promptString",
      "description": "Ziel-Repository (owner/repo)"
    }
  ]
}
