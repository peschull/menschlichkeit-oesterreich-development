{
  // ================================
  // ðŸš€ CORE PERFORMANCE & KONFLIKT-OPTIMIERUNGEN
  // ================================
  "editor.formatOnSave": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",

  // ðŸŽ¨ Native VS Code Bracket Pair Colorization (ersetzt Extension)
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": "active",
  "editor.guides.bracketPairsHorizontal": "active",
  "editor.guides.highlightActiveIndentation": true,
  "editor.guides.indentation": true,

  // âš¡ Performance-optimierte IntelliSense
  "editor.quickSuggestions": {
    "other": "on",
    "comments": "off",
    "strings": "on"
  },
  "editor.quickSuggestionsDelay": 10,
  "editor.suggest.insertMode": "replace",
  "editor.suggest.localityBonus": true,
  "editor.suggest.matchOnWordStartOnly": false,
  "editor.suggest.showWords": false,
  "editor.acceptSuggestionOnCommitCharacter": true,
  "editor.acceptSuggestionOnEnter": "on",

  // ðŸ”§ Extension-Konflikt vermeidende Settings
  "php.suggest.basic": false, // Intelephense Ã¼bernimmt
  "typescript.preferences.includePackageJsonAutoImports": "off", // Weniger Konflikte

  "files.exclude": {
    "vendor/": true,
    "node_modules/": true
  },
  // ================================
  // ðŸ¤– GITHUB COPILOT - DATEIENBASIERTE KONFIGURATION
  // ================================
  "github.copilot.chat.instructionFiles": [
    { "file": ".github/copilot-instructions.md" }, // allgemein, projektweit
    { "file": ".github/copilot-instructions.security.md" }, // Security-Guidelines
    { "file": ".github/copilot-instructions.commit.md" }, // Commit-/PR-Texte
    { "file": ".github/copilot-instructions.js.md", "globs": ["**/*.js", "**/*.jsx"] },
    { "file": ".github/copilot-instructions.ts.md", "globs": ["**/*.ts", "**/*.tsx"] },
    { "file": ".github/copilot-instructions.python.md", "globs": ["**/*.py"] }
  ],
  // (Optional) Prompt Files, direkt im Chat aufrufbar:
  "github.copilot.chat.promptFiles": [
    { "file": ".copilot/prompts/scaffold-component.md" },
    { "file": ".copilot/prompts/review-security.md" },
    { "file": ".copilot/prompts/gen-tests.md" }
  ],
  // (Optional) Chat Modes (spezialisierte Assistenten):
  "github.copilot.chat.chatModes": [
    { "file": ".copilot/modes/plan-only.md" },
    { "file": ".copilot/modes/frontend-only.md" }
  ],

  // ================================
  // ðŸš€ GITHUB COPILOT - ERWEITERTE KI-FEATURES (ChatGPT/Codex ParitÃ¤t)
  // ================================

  // Core Copilot Features
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": true,
    "scminput": false
  },

  // Inline Completions (entspricht openai.codex.inlineCompletions.enabled)
  "github.copilot.inlineSuggest.enable": true,

  // Advanced Chat Features
  "github.copilot.chat.newWorkspace.useContext7": true,
  "github.copilot.chat.codesearch.enabled": true,
  "github.copilot.chat.agent.thinkingTool": true,
  "github.copilot.chat.alternateGptPrompt.enabled": true,
  "github.copilot.chat.editor.temporalContext.enabled": true,
  "github.copilot.chat.generateTests.codeLens": true,
  "github.copilot.chat.languageContext.fix.typescript.enabled": true,
  "github.copilot.chat.languageContext.inline.typescript.enabled": true,
  "github.copilot.chat.notebook.enhancedNextEditSuggestions.enabled": true,
  "github.copilot.chat.notebook.followCellExecution.enabled": true,

  // Workspace Context (entspricht workspaceIndexing.enabled)
  "github.copilot.chat.workspaceContext": true,
  "github.copilot.chat.useWorkspaceContext": true,

  // Performance & Model Settings
  "github.copilot.advanced": {
    "debug.overrideEngine": "",
    "debug.overrideProxyUrl": "",
    "debug.testOverrideProxyUrl": ""
  },

  // ================================
  // ðŸ‡¦ðŸ‡¹ MENSCHLICHKEIT Ã–STERREICH - COPILOT OPTIMIERUNGEN
  // ================================

  // Vereins-spezifische Code-Generierung
  "github.copilot.chat.experimental.codeGeneration": true,
  "github.copilot.chat.experimental.multiFileEdit": true,
  "github.copilot.chat.experimental.workspaceSymbols": true,

  // DSGVO & Security-fokussierte Features
  "github.copilot.chat.experimental.securityReview": true,
  "github.copilot.chat.experimental.privacyCheck": true,

  // Austrian Development Context
  "github.copilot.chat.locale": "de-AT",
  "github.copilot.chat.experimental.contextualHelp": true,

  // Terminal & Task Integration (entspricht runTasks: "terminal")
  "github.copilot.chat.experimental.terminalContext": true,
  "github.copilot.chat.experimental.taskIntegration": true,

  // Performance fÃ¼r Vereins-Entwicklung optimiert
  "github.copilot.chat.maxTokens": 8000,
  "github.copilot.chat.temperature": 0.1, // Konsistente, prÃ¤zise Antworten
  "github.copilot.chat.experimental.indexing": true,

  // ================================
  // ðŸ¤– CHATGPT/CODEX KOMPATIBILITÃ„T - GitHub Copilot Integration
  // ================================

  // ChatGPT-Ã¤hnliche Startup-Verhalten
  "github.copilot.chat.welcomeMessage": "enabled",
  "github.copilot.chat.showWelcomeMessage": true,

  // Codex-Ã¤hnliche Inline Completions (entspricht inlineCompletions.enabled)
  "github.copilot.editor.enableAutoCompletions": true,
  "github.copilot.editor.enableCodeActions": true,
  "github.copilot.inlineSuggest.enableMultipleSuggestions": true,

  // Workspace-weite Indexierung (entspricht workspaceIndexing.enabled)
  "github.copilot.chat.experimental.workspaceIndexing": true,
  "github.copilot.chat.experimental.semanticSearch": true,
  "github.copilot.chat.experimental.fileReferences": true,

  // Multi-File Edits (entspricht experimental.multiFileEdits)
  "github.copilot.chat.experimental.codebaseContext": true,
  "github.copilot.chat.experimental.crossFileReference": true,
  "github.copilot.chat.experimental.projectWideRefactor": true,

  // Terminal Agent (entspricht agent.runTasks: "terminal")
  "github.copilot.terminal.suggestCommands": "on",
  "github.copilot.terminal.explainCommand": true,
  "github.copilot.chat.experimental.shellIntegration": true,
  "github.copilot.chat.experimental.commandSuggestions": true,

  // GPT-5 Ã¤hnliche Performance-Settings
  "github.copilot.chat.experimental.modelSelection": true,
  "github.copilot.chat.experimental.advancedReasoning": true,
  "github.copilot.chat.experimental.longContext": true,

  // Telemetrie deaktiviert (entspricht telemetry: "off")
  "github.copilot.telemetry": "off",
  "github.copilot.chat.telemetry": "off",
  "github.copilot.advanced.telemetry.enabled": false,

  // ================================
  // ðŸ‡¦ðŸ‡¹ VEREINS-OPTIMIERTE KI-FEATURES
  // ================================

  // DSGVO-konforme KI-UnterstÃ¼tzung
  "github.copilot.chat.experimental.privacyMode": "strict",
  "github.copilot.chat.experimental.dataProcessing": "local-only",
  "github.copilot.chat.experimental.auditLogging": true,

  // Ã–sterreichische Entwicklung
  "github.copilot.chat.experimental.localizedHelp": "de-AT",
  "github.copilot.chat.experimental.culturalContext": "austria",
  "github.copilot.chat.experimental.legalCompliance": "eu-gdpr",

  // Vereins-Management-spezifische Features
  "github.copilot.chat.experimental.domainSpecific": {
    "nonprofit": true,
    "finance": true,
    "sepa": true,
    "privacy": true,
    "authentication": true
  },

  "githubPullRequests.experimental.useQuickChat": true,

  // ================================
  // ðŸš€ ECHTE CHATGPT/CODEX EXTENSION SETTINGS
  // ================================

  // --- ChatGPT Extension Configuration ---
  "chatgpt.openOnStartup": true,
  "chatgpt.cliExecutable": "",
  "chatgpt.model": "gpt-4o", // Aktuellstes verfÃ¼gbares Model
  "chatgpt.inlineCompletions.enabled": true,
  "chatgpt.workspaceIndexing.enabled": true,
  "chatgpt.experimental.multiFileEdits": true,
  "chatgpt.experimental.agent.runTasks": "terminal", // echte Terminal-AusfÃ¼hrung
  "chatgpt.telemetry": "off",
  "chatgpt.apiKey": "", // Wird Ã¼ber Extension-UI konfiguriert
  "chatgpt.temperature": 0.1,
  "chatgpt.maxTokens": 8000,
  "chatgpt.contextWindow": "full",
  "chatgpt.codeCompletion": true,
  "chatgpt.codeExplanation": true,
  "chatgpt.codeOptimization": true,
  "chatgpt.documentGeneration": true,

  // --- OpenAI Codex Configuration ---
  "openai.codex.model": "gpt-4o", // Neuestes verfÃ¼gbares Model
  "openai.codex.inlineCompletions.enabled": true,
  "openai.codex.workspaceIndexing.enabled": true,
  "openai.codex.experimental.multiFileEdits": true,
  "openai.codex.experimental.agent.runTasks": "terminal", // echte Terminal-AusfÃ¼hrung
  "openai.codex.suggestions.telemetry": "off",
  "openai.codex.temperature": 0.1,
  "openai.codex.maxTokens": 8000,
  "openai.codex.contextLength": "extended",
  "openai.codex.completionTrigger": "auto",
  "openai.codex.codeGeneration": true,
  "openai.codex.codeRefactoring": true,
  "openai.codex.testGeneration": true,

  // --- Menschlichkeit Ã–sterreich Optimierungen ---
  "chatgpt.customPrompts": {
    "dsgvo-check": "PrÃ¼fe diesen Code auf DSGVO-Compliance und Ã¶sterreichische Datenschutzbestimmungen",
    "sepa-validation": "Validiere SEPA-Lastschrift Code fÃ¼r Ã¶sterreichische Banken",
    "security-review": "FÃ¼hre Security-Review fÃ¼r Vereinsmanagement-System durch",
    "accessibility": "PrÃ¼fe Barrierefreiheit nach WCAG 2.1 AA Standard"
  },

  "openai.codex.projectContext": {
    "type": "austrian-nonprofit",
    "compliance": ["DSGVO", "Austrian-Tax-Law", "Nonprofit-Regulations"],
    "languages": ["de-AT", "en"],
    "frameworks": ["React", "TypeScript", "Tailwind", "FastAPI", "PostgreSQL"]
  },

  "todo-tree.tree.expanded": true,
  "todo-tree.tree.flat": true,

  // Debug Configuration (Baseline fÃ¼r alle Stacks)
  "debug.inlineValues": "auto",
  "debug.openDebug": "openOnSessionStart",
  "debug.focusWindowOnBreak": false,
  "debug.showBreakpointsInOverviewRuler": true,
  "debug.onTaskErrors": "debugAnyway",

  "debug.javascript.autoAttachFilter": "smart",
  "debug.javascript.smartStep": true,
  "debug.javascript.usePreview": true,

  "sourceMap.includeSource": true,
  "debug.skipFiles": ["<node_internals>/**", "**/node_modules/**", "**/.next/**", "**/dist/**", "**/vendor/**"],

  "typescript.tsserver.maxTsServerMemory": 4096,
  "editor.stickyScroll.enabled": true,

  // ================================
  // PHP/Drupal Development (Intelephense + Xdebug) - OPTIMIERT
  // ================================
  "php.validate.enable": true,
  "php.validate.executablePath": "/opt/plesk/php/8.3/bin/php",
  "php.debug.executablePath": "/opt/plesk/php/8.3/bin/php",
  "intelephense.format.enable": true,
  "intelephense.completion.triggerParameterHints": true,
  "intelephense.completion.insertUseDeclaration": true,
  "intelephense.completion.fullyQualifyGlobalConstantsAndFunctions": false,
  "intelephense.diagnostics.enable": true,
  "intelephense.diagnostics.run": "onType",
  "intelephense.files.maxSize": 5000000,
  "intelephense.environment.phpVersion": "8.3.25",
  "intelephense.environment.includePaths": ["/opt/plesk/php/8.3/share/pear"],
  "intelephense.files.exclude": [
    "**/node_modules/**",
    "**/vendor/**/{Test,test,Tests,tests}/**",
    "**/storage/framework/cache/**",
    "**/storage/framework/views/**"
  ],
  "[php]": {
    "editor.defaultFormatter": "bmewburn.vscode-intelephense-client",
    "editor.formatOnSave": true
  },

  // ================================
  // JavaScript/TypeScript (ESLint + Prettier)
  // ================================
  "eslint.enable": true,
  "eslint.validate": ["javascript", "javascriptreact", "typescript", "typescriptreact"],
  "eslint.format.enable": true,
  "eslint.lintTask.enable": true,
  "eslint.codeAction.showDocumentation": {
    "enable": true
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit"
    }
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit"
    }
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // ================================
  // CSS/SCSS (Stylelint + Prettier)
  // ================================
  "stylelint.enable": true,
  "stylelint.validate": ["css", "scss", "sass", "postcss"],
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.fixAll.stylelint": "explicit"
    }
  },
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.fixAll.stylelint": "explicit"
    }
  },

  // ================================
  // Tailwind CSS IntelliSense
  // ================================
  "tailwindCSS.includeLanguages": {
    "html": "html",
    "javascript": "javascript",
    "typescript": "typescript",
    "php": "html"
  },
  "tailwindCSS.experimental.configFile": "frontend/tailwind.config.cjs",
  "tailwindCSS.files.exclude": ["**/node_modules/**", "**/vendor/**", "**/dist/**"],

  // ================================
  // Prisma Database
  // ================================
  "prisma.showPrismaDataPlatformNotification": false,
  "[prisma]": {
    "editor.defaultFormatter": "Prisma.prisma",
    "editor.formatOnSave": true
  },

  // ================================
  // Python Development (Pylance)
  // ================================
  "python.defaultInterpreterPath": "./.venv/Scripts/python.exe",
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": false,
  "python.linting.flake8Enabled": true,
  "python.formatting.provider": "black",
  "python.analysis.typeCheckingMode": "basic",
  "python.analysis.autoImportCompletions": true,
  "python.analysis.completeFunctionParens": true,
  "[python]": {
    "editor.defaultFormatter": "ms-python.python",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit"
    }
  },

  // ================================
  // Markdown Development
  // ================================
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.wordWrap": "on",
    "editor.quickSuggestions": {
      "comments": "off",
      "strings": "off",
      "other": "off"
    }
  },
  "markdown.preview.fontSize": 14,
  "markdown.preview.lineHeight": 1.6,

  // ================================
  // Docker Support
  // ================================
  "docker.showStartPage": false,
  "docker.containers.groupBy": "Compose Project Name",

  // ================================
  // Git & Version Control (GitLens)
  // ================================
  "gitlens.currentLine.enabled": true,
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.blame.compact": true,
  "gitlens.blame.heatmap.enabled": true,
  "gitlens.codeLens.enabled": true,
  "gitlens.statusBar.enabled": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "git.autofetch": true,

  // ================================
  // Todo Tree Configuration
  // ================================
  "todo-tree.general.tags": ["BUG", "HACK", "FIXME", "TODO", "XXX", "[ ]", "[x]"],
  "todo-tree.highlights.defaultHighlight": {
    "icon": "alert",
    "type": "tag",
    "foreground": "#FF0000",
    "background": "#FFFF00",
    "opacity": 50,
    "iconColour": "#0000FF"
  },
  "todo-tree.highlights.customHighlight": {
    "TODO": {
      "icon": "check",
      "foreground": "#FFD700"
    },
    "FIXME": {
      "icon": "alert",
      "foreground": "#FF4500"
    },
    "BUG": {
      "icon": "bug",
      "foreground": "#FF0000"
    }
  },

  // ================================
  // Code Spell Checker
  // ================================
  "cSpell.enabled": true,
  "cSpell.language": "en,de",
  "cSpell.words": [
    "menschlichkeit",
    "oesterreich",
    "drupal",
    "civicrm",
    "xdebug",
    "intelephense",
    "eslint",
    "prettier",
    "tailwindcss",
    "prisma",
    "pylance",
    "vitest",
    "playwright",
    "wakatime",
    "dotenv",
    "liveserver",
    "intellicode"
  ],

  // ================================
  // WakaTime - Time Tracking
  // ================================
  "wakatime.debug": false,
  "wakatime.hideFilenames": false,
  "wakatime.hideBranchNames": false,
  "wakatime.hideProjectNames": false,

  // ================================
  // Turbo Console Log - Smart Debugging
  // ================================
  "turboConsoleLog.wrapLogMessage": true,
  "turboConsoleLog.logMessagePrefix": "ðŸš€",
  "turboConsoleLog.addSemicolonInTheEnd": true,
  "turboConsoleLog.insertEnclosingClass": true,
  "turboConsoleLog.insertEnclosingFunction": true,
  "turboConsoleLog.delimiterInsideMessage": ":",
  "turboConsoleLog.includeFileNameAndLineNum": true,

  // ================================
  // JavaScript Booster - Advanced Refactoring
  // ================================
  "javascriptBooster.codeActions.enable": true,

  // ================================
  // PHP Awesome Snippets
  // ================================
  // php.suggest.basic bereits in PHP-Sektion konfiguriert

  // ================================
  // Live Server Configuration
  // ================================
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.donotVerifyTags": true,
  "liveServer.settings.port": 5500,
  "liveServer.settings.root": "/web",
  "liveServer.settings.CustomBrowser": "chrome",
  "liveServer.settings.ignoreFiles": [".vscode/**", "**/*.scss", "**/*.sass", "**/*.ts"],

  // ================================
  // IntelliCode AI Completion
  // ================================
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "vsintellicode.features.python.deepLearning": "enabled",

  // ================================
  // Code Coverage Visualization
  // ================================
  "coverage-gutters.coverageFileNames": ["lcov.info", "cov.xml", "coverage.xml", "jacoco.xml", "coverage.lcov"],
  "coverage-gutters.showGutterCoverage": true,
  "coverage-gutters.showLineCoverage": true,
  "coverage-gutters.showRulerCoverage": true,

  // ================================
  // Accessibility Linting (axe)
  // ================================
  "axe.enabledTags": ["wcag2a", "wcag2aa", "wcag21aa"],

  // ================================
  // Git Graph Visualization
  // ================================
  "git-graph.repository.showTags": true,
  "git-graph.repository.showRemoteBranches": true,
  "git-graph.graph.colours": ["#0085d9", "#d73027", "#ff6600", "#ff0066", "#66ff00", "#0066ff"],
  "git-graph.date.format": "Date & Time",
  "git-graph.defaultColumnVisibility": {
    "Date": true,
    "Author": true,
    "Commit": true,
    "Description": true
  },

  // ================================
  // Project Manager
  // ================================
  "projectManager.git.baseFolders": ["D:\\Arbeitsverzeichniss"],
  "projectManager.showProjectNameInStatusBar": true,
  "projectManager.sortList": "Name",

  // ================================
  // Version Lens - Package Versions
  // ================================
  "versionlens.caching.duration": 86400,
  "versionlens.npm.caching.duration": 3600,
  "versionlens.composer.caching.duration": 3600,
  "versionlens.suggestions.showOnStartup": true,

  // ================================
  // Environment Variables (dotenv)
  // ================================
  "dotenv.enableAutocloaking": false,

  // ================================
  // Testing Configuration (Vitest + Playwright)
  // ================================
  "vitest.enable": true,
  "vitest.commandLine": "npx vitest",
  "playwright.reuseBrowser": false,
  "playwright.showTrace": false,

  // ================================
  // Performance & Workspace Settings
  // ================================
  "files.watcherExclude": {
    "**/node_modules/**": true,
    "**/vendor/**": true,
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/coverage/**": true,
    "**/dist/**": true,
    "**/build/**": true,
    "**/.vscode/extensions/**": true
  },
  "search.exclude": {
    "**/node_modules": true,
    "**/vendor": true,
    "**/coverage": true,
    "**/dist": true,
    "**/build": true,
    "**/.git": true
  },
  "files.associations": {
    "*.php": "php",
    "*.module": "php",
    "*.install": "php",
    "*.theme": "php",
    "*.inc": "php",
    "*.profile": "php",
    "*.test": "php"
  },

  // ================================
  // Terminal Configuration - Menschlichkeit Ã–sterreich Premium Setup
  // ================================
  "terminal.integrated.defaultProfile.windows": "PowerShell Core",
  "terminal.integrated.profiles.windows": {
    "PowerShell Core": {
      "path": "pwsh.exe",
      "args": ["-NoLogo"],
      "icon": "terminal-powershell"
    },
    "PowerShell": {
      "source": "PowerShell",
      "icon": "terminal-powershell",
      "args": ["-NoLogo"]
    },
    "Command Prompt": {
      "path": ["${env:windir}\\System32\\cmd.exe"],
      "args": [],
      "icon": "terminal-cmd"
    },
    "Git Bash": {
      "path": "C:\\Program Files\\Git\\bin\\bash.exe",
      "args": ["--login"],
      "icon": "terminal-bash"
    }
  },
  "terminal.integrated.fontSize": 14,
  "terminal.integrated.fontFamily": "'Cascadia Code PL', 'Fira Code', 'JetBrains Mono', Consolas, monospace",
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.rightClickBehavior": "copyPaste",
  "terminal.integrated.scrollback": 10000,
  "terminal.integrated.shellIntegration.enabled": true,
  "terminal.integrated.tabs.enabled": true,
  "terminal.integrated.tabs.location": "left",
  "terminal.integrated.persistentSessionReviveProcess": "onExit",
  "terminal.integrated.enableMultiLinePasteWarning": "auto",
  "terminal.integrated.localEchoLatencyThreshold": 30,
  "terminal.integrated.localEchoExcludePrograms": ["vim", "vi", "nano", "tmux"],
  "terminal.integrated.gpuAcceleration": "on",
  "terminal.integrated.smoothScrolling": true,
  "terminal.integrated.unicodeVersion": "11",

  "terminal.integrated.env.windows": {
    "POSH_THEME": "${workspaceFolder}\\menschlichkeit-oesterreich.omp.json"
  },

  "terminal.integrated.commandsToSkipShell": ["language-julia.interrupt"],

  "terminal.integrated.allowChords": false,
  "terminal.integrated.allowMnemonics": true,
  "terminal.integrated.altClickMovesCursor": true,
  "terminal.integrated.macOptionIsMeta": true,
  "terminal.integrated.macOptionClickForcesSelection": false,

  "terminal.integrated.automationProfile.windows": {
    "path": "pwsh.exe",
    "args": ["-NoLogo", "-NoProfile"]
  }
}
