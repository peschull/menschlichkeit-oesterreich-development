/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}

@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --color-red-50: oklch(.971 .013 17.38);
    --color-red-100: oklch(.936 .032 17.717);
    --color-red-200: oklch(.885 .062 18.334);
    --color-red-400: oklch(.704 .191 22.216);
    --color-red-500: oklch(.637 .237 25.331);
    --color-red-600: oklch(.577 .245 27.325);
    --color-red-700: oklch(.505 .213 27.518);
    --color-red-800: oklch(.444 .177 26.899);
    --color-red-900: oklch(.396 .141 25.723);
    --color-orange-50: oklch(.98 .016 73.684);
    --color-orange-100: oklch(.954 .038 75.164);
    --color-orange-200: oklch(.901 .076 70.697);
    --color-orange-500: oklch(.705 .213 47.604);
    --color-orange-600: oklch(.646 .222 41.116);
    --color-orange-800: oklch(.47 .157 37.304);
    --color-yellow-100: oklch(.973 .071 103.193);
    --color-yellow-200: oklch(.945 .129 101.54);
    --color-yellow-500: oklch(.795 .184 86.047);
    --color-yellow-600: oklch(.681 .162 75.834);
    --color-yellow-800: oklch(.476 .114 61.907);
    --color-green-50: oklch(.982 .018 155.826);
    --color-green-100: oklch(.962 .044 156.743);
    --color-green-200: oklch(.925 .084 155.995);
    --color-green-400: oklch(.792 .209 151.711);
    --color-green-500: oklch(.723 .219 149.579);
    --color-green-600: oklch(.627 .194 149.214);
    --color-green-700: oklch(.527 .154 150.069);
    --color-green-800: oklch(.448 .119 151.328);
    --color-green-900: oklch(.393 .095 152.535);
    --color-emerald-100: oklch(.95 .052 163.051);
    --color-emerald-200: oklch(.905 .093 164.15);
    --color-emerald-800: oklch(.432 .095 166.913);
    --color-cyan-500: oklch(.715 .143 215.221);
    --color-blue-50: oklch(.97 .014 254.604);
    --color-blue-100: oklch(.932 .032 255.585);
    --color-blue-200: oklch(.882 .059 254.128);
    --color-blue-400: oklch(.707 .165 254.624);
    --color-blue-500: oklch(.623 .214 259.815);
    --color-blue-600: oklch(.546 .245 262.881);
    --color-blue-700: oklch(.488 .243 264.376);
    --color-blue-800: oklch(.424 .199 265.638);
    --color-blue-900: oklch(.379 .146 265.522);
    --color-indigo-50: oklch(.962 .018 272.314);
    --color-purple-50: oklch(.977 .014 308.299);
    --color-purple-100: oklch(.946 .033 307.174);
    --color-purple-200: oklch(.902 .063 306.703);
    --color-purple-500: oklch(.627 .265 303.9);
    --color-purple-600: oklch(.558 .288 302.321);
    --color-purple-800: oklch(.438 .218 303.724);
    --color-pink-50: oklch(.971 .014 343.198);
    --color-gray-50: oklch(.985 .002 247.839);
    --color-gray-100: oklch(.967 .003 264.542);
    --color-gray-200: oklch(.928 .006 264.531);
    --color-gray-300: oklch(.872 .01 258.338);
    --color-gray-400: oklch(.707 .022 261.325);
    --color-gray-500: oklch(.551 .027 264.364);
    --color-gray-600: oklch(.446 .03 256.802);
    --color-gray-700: oklch(.373 .034 259.733);
    --color-gray-800: oklch(.278 .033 256.848);
    --color-gray-900: oklch(.21 .034 264.665);
    --color-black: #000;
    --color-white: #fff;
    --spacing: .25rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-6xl: 72rem;
    --container-7xl: 80rem;
    --text-xs: .75rem;
    --text-xs--line-height: calc(1 / .75);
    --text-sm: .875rem;
    --text-sm--line-height: calc(1.25 / .875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --tracking-tight: -.025em;
    --tracking-widest: .1em;
    --leading-tight: 1.25;
    --leading-snug: 1.375;
    --leading-relaxed: 1.625;
    --radius-xs: .125rem;
    --radius-sm: var(--radius-sm);
    --radius-lg: var(--radius-lg);
    --radius-xl: var(--radius-xl);
    --radius-2xl: 1rem;
    --ease-in-out: cubic-bezier(.4, 0, .2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-pulse: pulse 2s cubic-bezier(.4, 0, .6, 1) infinite;
    --blur-sm: 8px;
    --blur-md: 12px;
    --blur-xl: 24px;
    --blur-3xl: 64px;
    --default-transition-duration: .15s;
    --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(--font-sans--font-variation-settings);
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(--font-mono--font-feature-settings);
    --default-mono-font-variation-settings: var(--font-mono--font-variation-settings);
    --color-primary: var(--primary);
    --color-primary-50: var(--primary-50);
    --color-success: var(--success);
  }
}

@layer base {
  *, :after, :before, ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  html, :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  body {
    line-height: inherit;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    vertical-align: middle;
    display: block;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  ::placeholder {
    opacity: 1;
    color: currentColor;
  }

  @supports (color: color-mix(in lab, red, red)) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }

  ::file-selector-button {
    appearance: button;
  }

  ::-webkit-inner-spin-button {
    height: auto;
  }

  ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  body {
    background-color: var(--background);
    color: var(--foreground);
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  body {
    background-color: var(--background);
    color: var(--foreground);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-feature-settings: "cv03", "cv04", "cv11";
  }

  html {
    scroll-behavior: smooth;
  }

  ::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  ::-webkit-scrollbar-track {
    background: var(--muted);
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb {
    background: var(--muted-foreground);
    border-radius: 4px;
    transition: background-color .2s;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: var(--foreground-muted);
  }

  ::selection {
    background-color: var(--primary);
    color: var(--primary-foreground);
  }

  :focus-visible {
    outline: 2px solid var(--ring);
    outline-offset: 2px;
  }

  @media (prefers-reduced-motion: reduce) {
    *, :before, :after {
      scroll-behavior: auto !important;
      transition-duration: .01ms !important;
      animation-duration: .01ms !important;
      animation-iteration-count: 1 !important;
    }
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h1 {
    font-size: 3rem;
    font-weight: var(--font-weight-bold);
    letter-spacing: -.02em;
    color: var(--foreground);
    margin-bottom: 1.5rem;
    line-height: 1.2;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h2 {
    font-size: 2.25rem;
    font-weight: var(--font-weight-semibold);
    letter-spacing: -.015em;
    color: var(--foreground);
    margin-bottom: 1.25rem;
    line-height: 1.3;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h3 {
    font-size: 1.875rem;
    font-weight: var(--font-weight-semibold);
    letter-spacing: -.01em;
    color: var(--foreground);
    margin-bottom: 1rem;
    line-height: 1.4;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h4 {
    font-size: 1.5rem;
    font-weight: var(--font-weight-medium);
    color: var(--foreground);
    margin-bottom: .75rem;
    line-height: 1.4;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h5 {
    font-size: 1.25rem;
    font-weight: var(--font-weight-medium);
    color: var(--foreground);
    margin-bottom: .5rem;
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h6 {
    font-size: 1.125rem;
    font-weight: var(--font-weight-medium);
    color: var(--foreground-muted);
    margin-bottom: .5rem;
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) p {
    font-size: 1rem;
    font-weight: var(--font-weight-normal);
    color: var(--foreground-muted);
    margin-bottom: 1rem;
    line-height: 1.7;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) .lead {
    font-size: 1.25rem;
    font-weight: var(--font-weight-normal);
    color: var(--foreground-muted);
    line-height: 1.6;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) .small {
    font-size: .875rem;
    font-weight: var(--font-weight-normal);
    color: var(--foreground-subtle);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) label {
    font-size: .875rem;
    font-weight: var(--font-weight-medium);
    color: var(--foreground);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) button {
    font-size: .875rem;
    font-weight: var(--font-weight-medium);
    letter-spacing: .025em;
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) input, :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) textarea, :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) select {
    font-size: 1rem;
    font-weight: var(--font-weight-normal);
    color: var(--foreground);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) a {
    color: var(--primary);
    text-decoration: none;
    transition: color .2s;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) a:hover {
    color: var(--primary-hover);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) blockquote {
    font-size: 1.125rem;
    font-weight: var(--font-weight-normal);
    color: var(--foreground-muted);
    border-left: 4px solid var(--primary);
    margin: 2rem 0;
    padding-left: 1.5rem;
    font-style: italic;
    line-height: 1.6;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) code {
    background: var(--muted);
    color: var(--foreground);
    border-radius: .25rem;
    padding: .125rem .25rem;
    font-family: ui-monospace, SFMono-Regular, SF Mono, Consolas, Liberation Mono, Menlo, monospace;
    font-size: .875rem;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) pre {
    background: var(--muted);
    border-radius: .5rem;
    margin: 1.5rem 0;
    padding: 1rem;
    font-family: ui-monospace, SFMono-Regular, SF Mono, Consolas, Liberation Mono, Menlo, monospace;
    font-size: .875rem;
    overflow-x: auto;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) ul, :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) ol {
    margin-bottom: 1rem;
    padding-left: 1.5rem;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) li {
    color: var(--foreground-muted);
    margin-bottom: .25rem;
    font-size: 1rem;
    line-height: 1.7;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) hr {
    border: none;
    border-top: 1px solid var(--border);
    margin: 3rem 0;
  }
}

@layer utilities {
  .\@container\/card-header {
    container: card-header / inline-size;
  }

  .pointer-events-none {
    pointer-events: none;
  }

  .sr-only {
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    position: absolute;
    overflow: hidden;
  }

  .absolute {
    position: absolute;
  }

  .fixed {
    position: fixed;
  }

  .relative {
    position: relative;
  }

  .static {
    position: static;
  }

  .sticky {
    position: sticky;
  }

  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }

  .inset-1 {
    inset: calc(var(--spacing) * 1);
  }

  .inset-x-0 {
    inset-inline: calc(var(--spacing) * 0);
  }

  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }

  .-top-1 {
    top: calc(var(--spacing) * -1);
  }

  .-top-2 {
    top: calc(var(--spacing) * -2);
  }

  .-top-3 {
    top: calc(var(--spacing) * -3);
  }

  .top-0 {
    top: calc(var(--spacing) * 0);
  }

  .top-1\/2 {
    top: 50%;
  }

  .top-2 {
    top: calc(var(--spacing) * 2);
  }

  .top-4 {
    top: calc(var(--spacing) * 4);
  }

  .top-6 {
    top: calc(var(--spacing) * 6);
  }

  .top-20 {
    top: calc(var(--spacing) * 20);
  }

  .top-24 {
    top: calc(var(--spacing) * 24);
  }

  .top-\[50\%\] {
    top: 50%;
  }

  .top-full {
    top: 100%;
  }

  .-right-1 {
    right: calc(var(--spacing) * -1);
  }

  .-right-2 {
    right: calc(var(--spacing) * -2);
  }

  .right-0 {
    right: calc(var(--spacing) * 0);
  }

  .right-2 {
    right: calc(var(--spacing) * 2);
  }

  .right-4 {
    right: calc(var(--spacing) * 4);
  }

  .right-6 {
    right: calc(var(--spacing) * 6);
  }

  .right-10 {
    right: calc(var(--spacing) * 10);
  }

  .-bottom-2 {
    bottom: calc(var(--spacing) * -2);
  }

  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }

  .bottom-4 {
    bottom: calc(var(--spacing) * 4);
  }

  .bottom-6 {
    bottom: calc(var(--spacing) * 6);
  }

  .bottom-20 {
    bottom: calc(var(--spacing) * 20);
  }

  .bottom-full {
    bottom: 100%;
  }

  .-left-2 {
    left: calc(var(--spacing) * -2);
  }

  .left-0 {
    left: calc(var(--spacing) * 0);
  }

  .left-1\/2 {
    left: 50%;
  }

  .left-2 {
    left: calc(var(--spacing) * 2);
  }

  .left-3 {
    left: calc(var(--spacing) * 3);
  }

  .left-4 {
    left: calc(var(--spacing) * 4);
  }

  .left-6 {
    left: calc(var(--spacing) * 6);
  }

  .left-10 {
    left: calc(var(--spacing) * 10);
  }

  .left-\[50\%\] {
    left: 50%;
  }

  .z-10 {
    z-index: 10;
  }

  .z-40 {
    z-index: 40;
  }

  .z-50 {
    z-index: 50;
  }

  .z-\[100\] {
    z-index: 100;
  }

  .order-1 {
    order: 1;
  }

  .order-2 {
    order: 2;
  }

  .col-span-2 {
    grid-column: span 2 / span 2;
  }

  .col-start-2 {
    grid-column-start: 2;
  }

  .row-span-2 {
    grid-row: span 2 / span 2;
  }

  .row-start-1 {
    grid-row-start: 1;
  }

  .container {
    width: 100%;
  }

  @media (width >= 40rem) {
    .container {
      max-width: 40rem;
    }
  }

  @media (width >= 48rem) {
    .container {
      max-width: 48rem;
    }
  }

  @media (width >= 64rem) {
    .container {
      max-width: 64rem;
    }
  }

  @media (width >= 80rem) {
    .container {
      max-width: 80rem;
    }
  }

  @media (width >= 96rem) {
    .container {
      max-width: 96rem;
    }
  }

  .-mx-1 {
    margin-inline: calc(var(--spacing) * -1);
  }

  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }

  .mx-8 {
    margin-inline: calc(var(--spacing) * 8);
  }

  .mx-auto {
    margin-inline: auto;
  }

  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }

  .-mt-0\.5 {
    margin-top: calc(var(--spacing) * -.5);
  }

  .mt-0\.5 {
    margin-top: calc(var(--spacing) * .5);
  }

  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }

  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }

  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }

  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }

  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }

  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }

  .mt-auto {
    margin-top: auto;
  }

  .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }

  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }

  .mr-3 {
    margin-right: calc(var(--spacing) * 3);
  }

  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }

  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }

  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }

  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }

  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }

  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }

  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }

  .mb-16 {
    margin-bottom: calc(var(--spacing) * 16);
  }

  .mb-20 {
    margin-bottom: calc(var(--spacing) * 20);
  }

  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }

  .ml-auto {
    margin-left: auto;
  }

  .line-clamp-1 {
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .line-clamp-2 {
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .block {
    display: block;
  }

  .flex {
    display: flex;
  }

  .grid {
    display: grid;
  }

  .hidden {
    display: none;
  }

  .inline {
    display: inline;
  }

  .inline-block {
    display: inline-block;
  }

  .inline-flex {
    display: inline-flex;
  }

  .table {
    display: table;
  }

  .table-caption {
    display: table-caption;
  }

  .table-cell {
    display: table-cell;
  }

  .table-row {
    display: table-row;
  }

  .field-sizing-content {
    field-sizing: content;
  }

  .size-2 {
    width: calc(var(--spacing) * 2);
    height: calc(var(--spacing) * 2);
  }

  .size-3\.5 {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }

  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .size-9 {
    width: calc(var(--spacing) * 9);
    height: calc(var(--spacing) * 9);
  }

  .size-10 {
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
  }

  .size-full {
    width: 100%;
    height: 100%;
  }

  .h-0 {
    height: calc(var(--spacing) * 0);
  }

  .h-0\.5 {
    height: calc(var(--spacing) * .5);
  }

  .h-1 {
    height: calc(var(--spacing) * 1);
  }

  .h-2 {
    height: calc(var(--spacing) * 2);
  }

  .h-2\.5 {
    height: calc(var(--spacing) * 2.5);
  }

  .h-3 {
    height: calc(var(--spacing) * 3);
  }

  .h-4 {
    height: calc(var(--spacing) * 4);
  }

  .h-5 {
    height: calc(var(--spacing) * 5);
  }

  .h-6 {
    height: calc(var(--spacing) * 6);
  }

  .h-7 {
    height: calc(var(--spacing) * 7);
  }

  .h-8 {
    height: calc(var(--spacing) * 8);
  }

  .h-9 {
    height: calc(var(--spacing) * 9);
  }

  .h-10 {
    height: calc(var(--spacing) * 10);
  }

  .h-12 {
    height: calc(var(--spacing) * 12);
  }

  .h-16 {
    height: calc(var(--spacing) * 16);
  }

  .h-20 {
    height: calc(var(--spacing) * 20);
  }

  .h-24 {
    height: calc(var(--spacing) * 24);
  }

  .h-32 {
    height: calc(var(--spacing) * 32);
  }

  .h-48 {
    height: calc(var(--spacing) * 48);
  }

  .h-64 {
    height: calc(var(--spacing) * 64);
  }

  .h-72 {
    height: calc(var(--spacing) * 72);
  }

  .h-96 {
    height: calc(var(--spacing) * 96);
  }

  .h-\[1\.15rem\] {
    height: 1.15rem;
  }

  .h-\[400px\] {
    height: 400px;
  }

  .h-\[500px\] {
    height: 500px;
  }

  .h-\[calc\(100\%-1px\)\] {
    height: calc(100% - 1px);
  }

  .h-\[var\(--radix-select-trigger-height\)\] {
    height: var(--radix-select-trigger-height);
  }

  .h-auto {
    height: auto;
  }

  .h-full {
    height: 100%;
  }

  .h-px {
    height: 1px;
  }

  .max-h-\(--radix-dropdown-menu-content-available-height\) {
    max-height: var(--radix-dropdown-menu-content-available-height);
  }

  .max-h-\(--radix-select-content-available-height\) {
    max-height: var(--radix-select-content-available-height);
  }

  .max-h-60 {
    max-height: calc(var(--spacing) * 60);
  }

  .max-h-\[90vh\] {
    max-height: 90vh;
  }

  .max-h-\[300px\] {
    max-height: 300px;
  }

  .max-h-\[calc\(90vh-80px\)\] {
    max-height: calc(90vh - 80px);
  }

  .min-h-4 {
    min-height: calc(var(--spacing) * 4);
  }

  .min-h-16 {
    min-height: calc(var(--spacing) * 16);
  }

  .min-h-\[100px\] {
    min-height: 100px;
  }

  .min-h-\[120px\] {
    min-height: 120px;
  }

  .min-h-\[200px\] {
    min-height: 200px;
  }

  .min-h-screen {
    min-height: 100vh;
  }

  .w-0 {
    width: calc(var(--spacing) * 0);
  }

  .w-1\/2 {
    width: 50%;
  }

  .w-2 {
    width: calc(var(--spacing) * 2);
  }

  .w-2\.5 {
    width: calc(var(--spacing) * 2.5);
  }

  .w-3 {
    width: calc(var(--spacing) * 3);
  }

  .w-3\/4 {
    width: 75%;
  }

  .w-4 {
    width: calc(var(--spacing) * 4);
  }

  .w-5 {
    width: calc(var(--spacing) * 5);
  }

  .w-5\/6 {
    width: 83.3333%;
  }

  .w-6 {
    width: calc(var(--spacing) * 6);
  }

  .w-7 {
    width: calc(var(--spacing) * 7);
  }

  .w-8 {
    width: calc(var(--spacing) * 8);
  }

  .w-9 {
    width: calc(var(--spacing) * 9);
  }

  .w-10 {
    width: calc(var(--spacing) * 10);
  }

  .w-12 {
    width: calc(var(--spacing) * 12);
  }

  .w-16 {
    width: calc(var(--spacing) * 16);
  }

  .w-20 {
    width: calc(var(--spacing) * 20);
  }

  .w-24 {
    width: calc(var(--spacing) * 24);
  }

  .w-32 {
    width: calc(var(--spacing) * 32);
  }

  .w-48 {
    width: calc(var(--spacing) * 48);
  }

  .w-64 {
    width: calc(var(--spacing) * 64);
  }

  .w-72 {
    width: calc(var(--spacing) * 72);
  }

  .w-96 {
    width: calc(var(--spacing) * 96);
  }

  .w-\[50px\] {
    width: 50px;
  }

  .w-\[150px\] {
    width: 150px;
  }

  .w-\[180px\] {
    width: 180px;
  }

  .w-\[200px\] {
    width: 200px;
  }

  .w-\[400px\] {
    width: 400px;
  }

  .w-fit {
    width: fit-content;
  }

  .w-full {
    width: 100%;
  }

  .max-w-2xl {
    max-width: var(--container-2xl);
  }

  .max-w-3xl {
    max-width: var(--container-3xl);
  }

  .max-w-4xl {
    max-width: var(--container-4xl);
  }

  .max-w-5xl {
    max-width: var(--container-5xl);
  }

  .max-w-6xl {
    max-width: var(--container-6xl);
  }

  .max-w-7xl {
    max-width: var(--container-7xl);
  }

  .max-w-\[calc\(100\%-2rem\)\] {
    max-width: calc(100% - 2rem);
  }

  .max-w-\[calc\(100vw-2rem\)\] {
    max-width: calc(100vw - 2rem);
  }

  .max-w-lg {
    max-width: var(--container-lg);
  }

  .max-w-md {
    max-width: var(--container-md);
  }

  .max-w-none {
    max-width: none;
  }

  .max-w-sm {
    max-width: var(--container-sm);
  }

  .max-w-xl {
    max-width: var(--container-xl);
  }

  .max-w-xs {
    max-width: var(--container-xs);
  }

  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }

  .min-w-\[8rem\] {
    min-width: 8rem;
  }

  .min-w-\[20px\] {
    min-width: 20px;
  }

  .min-w-\[250px\] {
    min-width: 250px;
  }

  .min-w-\[var\(--radix-select-trigger-width\)\] {
    min-width: var(--radix-select-trigger-width);
  }

  .flex-1 {
    flex: 1;
  }

  .flex-shrink-0, .shrink-0 {
    flex-shrink: 0;
  }

  .caption-bottom {
    caption-side: bottom;
  }

  .origin-\(--radix-dropdown-menu-content-transform-origin\) {
    transform-origin: var(--radix-dropdown-menu-content-transform-origin);
  }

  .origin-\(--radix-popover-content-transform-origin\) {
    transform-origin: var(--radix-popover-content-transform-origin);
  }

  .origin-\(--radix-select-content-transform-origin\) {
    transform-origin: var(--radix-select-content-transform-origin);
  }

  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-x-10 {
    --tw-translate-x: calc(var(--spacing) * 10);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-x-\[-50\%\] {
    --tw-translate-x: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-y-10 {
    --tw-translate-y: calc(var(--spacing) * -10);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-\[-50\%\] {
    --tw-translate-y: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .scale-105 {
    --tw-scale-x: 105%;
    --tw-scale-y: 105%;
    --tw-scale-z: 105%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .rotate-45 {
    rotate: 45deg;
  }

  .rotate-180 {
    rotate: 180deg;
  }

  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }

  .animate-pulse {
    animation: var(--animate-pulse);
  }

  .animate-spin {
    animation: var(--animate-spin);
  }

  .cursor-default {
    cursor: default;
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .touch-none {
    touch-action: none;
  }

  .resize {
    resize: both;
  }

  .resize-none {
    resize: none;
  }

  .scroll-my-1 {
    scroll-margin-block: calc(var(--spacing) * 1);
  }

  .scroll-py-1 {
    scroll-padding-block: calc(var(--spacing) * 1);
  }

  .list-inside {
    list-style-position: inside;
  }

  .list-disc {
    list-style-type: disc;
  }

  .auto-rows-min {
    grid-auto-rows: min-content;
  }

  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }

  .grid-cols-6 {
    grid-template-columns: repeat(6, minmax(0, 1fr));
  }

  .grid-cols-\[0_1fr\] {
    grid-template-columns: 0 1fr;
  }

  .grid-rows-\[auto_auto\] {
    grid-template-rows: auto auto;
  }

  .flex-col {
    flex-direction: column;
  }

  .flex-col-reverse {
    flex-direction: column-reverse;
  }

  .flex-wrap {
    flex-wrap: wrap;
  }

  .items-baseline {
    align-items: baseline;
  }

  .items-center {
    align-items: center;
  }

  .items-start {
    align-items: flex-start;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-center {
    justify-content: center;
  }

  .justify-end {
    justify-content: flex-end;
  }

  .justify-start {
    justify-content: flex-start;
  }

  .justify-items-start {
    justify-items: start;
  }

  .gap-0 {
    gap: calc(var(--spacing) * 0);
  }

  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }

  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }

  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }

  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }

  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }

  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }

  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }

  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }

  .gap-16 {
    gap: calc(var(--spacing) * 16);
  }

  :where(.space-y-1 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-2 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-3 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-6 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-8 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-x-1 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-2 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-3 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-4 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
  }

  .gap-y-0\.5 {
    row-gap: calc(var(--spacing) * .5);
  }

  :where(.divide-y > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }

  :where(.divide-border > :not(:last-child)) {
    border-color: var(--border);
  }

  .self-start {
    align-self: flex-start;
  }

  .justify-self-end {
    justify-self: flex-end;
  }

  .truncate {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  .overflow-auto {
    overflow: auto;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .overflow-x-auto {
    overflow-x: auto;
  }

  .overflow-x-hidden {
    overflow-x: hidden;
  }

  .overflow-y-auto {
    overflow-y: auto;
  }

  .rounded {
    border-radius: .25rem;
  }

  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }

  .rounded-\[4px\] {
    border-radius: 4px;
  }

  .rounded-\[inherit\] {
    border-radius: inherit;
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .rounded-lg {
    border-radius: var(--radius-lg);
  }

  .rounded-md {
    border-radius: var(--radius);
  }

  .rounded-sm {
    border-radius: var(--radius-sm);
  }

  .rounded-xl {
    border-radius: var(--radius-xl);
  }

  .rounded-xs {
    border-radius: var(--radius-xs);
  }

  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }

  .border-4 {
    border-style: var(--tw-border-style);
    border-width: 4px;
  }

  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }

  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }

  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }

  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }

  .border-none {
    --tw-border-style: none;
    border-style: none;
  }

  .border-blue-200 {
    border-color: var(--color-blue-200);
  }

  .border-border {
    border-color: var(--border);
  }

  .border-border\/20 {
    border-color: var(--border);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-border\/20 {
      border-color: color-mix(in oklab, var(--border) 20%, transparent);
    }
  }

  .border-border\/40 {
    border-color: var(--border);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-border\/40 {
      border-color: color-mix(in oklab, var(--border) 40%, transparent);
    }
  }

  .border-border\/50 {
    border-color: var(--border);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-border\/50 {
      border-color: color-mix(in oklab, var(--border) 50%, transparent);
    }
  }

  .border-brand-orange {
    border-color: var(--brand-orange);
  }

  .border-brand-red {
    border-color: var(--brand-red);
  }

  .border-emerald-200 {
    border-color: var(--color-emerald-200);
  }

  .border-gray-200 {
    border-color: var(--color-gray-200);
  }

  .border-gray-300 {
    border-color: var(--color-gray-300);
  }

  .border-green-200 {
    border-color: var(--color-green-200);
  }

  .border-green-500 {
    border-color: var(--color-green-500);
  }

  .border-input {
    border-color: var(--input);
  }

  .border-orange-200 {
    border-color: var(--color-orange-200);
  }

  .border-primary {
    border-color: var(--primary);
  }

  .border-primary-100 {
    border-color: var(--primary-100);
  }

  .border-primary-foreground\/20 {
    border-color: var(--primary-foreground);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-primary-foreground\/20 {
      border-color: color-mix(in oklab, var(--primary-foreground) 20%, transparent);
    }
  }

  .border-purple-200 {
    border-color: var(--color-purple-200);
  }

  .border-red-200 {
    border-color: var(--color-red-200);
  }

  .border-transparent {
    border-color: #0000;
  }

  .border-warning {
    border-color: var(--warning);
  }

  .border-yellow-200 {
    border-color: var(--color-yellow-200);
  }

  .border-t-gray-900 {
    border-top-color: var(--color-gray-900);
  }

  .border-t-transparent {
    border-top-color: #0000;
  }

  .border-l-transparent {
    border-left-color: #0000;
  }

  .bg-background {
    background-color: var(--background);
  }

  .bg-background-alt {
    background-color: var(--background-alt);
  }

  .bg-background\/80 {
    background-color: var(--background);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-background\/80 {
      background-color: color-mix(in oklab, var(--background) 80%, transparent);
    }
  }

  .bg-black {
    background-color: var(--color-black);
  }

  .bg-black\/50 {
    background-color: #00000080;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/50 {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }

  .bg-blue-50 {
    background-color: var(--color-blue-50);
  }

  .bg-blue-100 {
    background-color: var(--color-blue-100);
  }

  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }

  .bg-border {
    background-color: var(--border);
  }

  .bg-brand-gradient {
    background-color: var(--brand-gradient);
  }

  .bg-brand-orange\/10 {
    background-color: var(--brand-orange);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-brand-orange\/10 {
      background-color: color-mix(in oklab, var(--brand-orange) 10%, transparent);
    }
  }

  .bg-brand-red\/10 {
    background-color: var(--brand-red);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-brand-red\/10 {
      background-color: color-mix(in oklab, var(--brand-red) 10%, transparent);
    }
  }

  .bg-card {
    background-color: var(--card);
  }

  .bg-destructive {
    background-color: var(--destructive);
  }

  .bg-destructive\/10 {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-destructive\/10 {
      background-color: color-mix(in oklab, var(--destructive) 10%, transparent);
    }
  }

  .bg-emerald-100 {
    background-color: var(--color-emerald-100);
  }

  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }

  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }

  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }

  .bg-gray-400 {
    background-color: var(--color-gray-400);
  }

  .bg-gray-900 {
    background-color: var(--color-gray-900);
  }

  .bg-green-50 {
    background-color: var(--color-green-50);
  }

  .bg-green-100 {
    background-color: var(--color-green-100);
  }

  .bg-green-400 {
    background-color: var(--color-green-400);
  }

  .bg-green-500 {
    background-color: var(--color-green-500);
  }

  .bg-input-background {
    background-color: var(--input-background);
  }

  .bg-muted {
    background-color: var(--muted);
  }

  .bg-muted\/30 {
    background-color: var(--muted);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-muted\/30 {
      background-color: color-mix(in oklab, var(--muted) 30%, transparent);
    }
  }

  .bg-muted\/50 {
    background-color: var(--muted);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-muted\/50 {
      background-color: color-mix(in oklab, var(--muted) 50%, transparent);
    }
  }

  .bg-orange-50 {
    background-color: var(--color-orange-50);
  }

  .bg-orange-100 {
    background-color: var(--color-orange-100);
  }

  .bg-orange-500 {
    background-color: var(--color-orange-500);
  }

  .bg-popover {
    background-color: var(--popover);
  }

  .bg-primary {
    background-color: var(--primary);
  }

  .bg-primary-50 {
    background-color: var(--primary-50);
  }

  .bg-primary-foreground\/10 {
    background-color: var(--primary-foreground);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-primary-foreground\/10 {
      background-color: color-mix(in oklab, var(--primary-foreground) 10%, transparent);
    }
  }

  .bg-primary-foreground\/20 {
    background-color: var(--primary-foreground);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-primary-foreground\/20 {
      background-color: color-mix(in oklab, var(--primary-foreground) 20%, transparent);
    }
  }

  .bg-primary\/5 {
    background-color: var(--primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-primary\/5 {
      background-color: color-mix(in oklab, var(--primary) 5%, transparent);
    }
  }

  .bg-primary\/10 {
    background-color: var(--primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-primary\/10 {
      background-color: color-mix(in oklab, var(--primary) 10%, transparent);
    }
  }

  .bg-primary\/20 {
    background-color: var(--primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-primary\/20 {
      background-color: color-mix(in oklab, var(--primary) 20%, transparent);
    }
  }

  .bg-purple-50 {
    background-color: var(--color-purple-50);
  }

  .bg-purple-100 {
    background-color: var(--color-purple-100);
  }

  .bg-red-50 {
    background-color: var(--color-red-50);
  }

  .bg-red-100 {
    background-color: var(--color-red-100);
  }

  .bg-red-500 {
    background-color: var(--color-red-500);
  }

  .bg-secondary {
    background-color: var(--secondary);
  }

  .bg-success {
    background-color: var(--success);
  }

  .bg-transparent {
    background-color: #0000;
  }

  .bg-warning {
    background-color: var(--warning);
  }

  .bg-warning-50 {
    background-color: var(--warning-50);
  }

  .bg-white {
    background-color: var(--color-white);
  }

  .bg-yellow-100 {
    background-color: var(--color-yellow-100);
  }

  .bg-yellow-500 {
    background-color: var(--color-yellow-500);
  }

  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-tr {
    --tw-gradient-position: to top right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .from-black\/20 {
    --tw-gradient-from: #0003;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-black\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }

  .from-black\/30 {
    --tw-gradient-from: #0000004d;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-black\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 30%, transparent);
    }
  }

  .from-blue-50 {
    --tw-gradient-from: var(--color-blue-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-blue-400 {
    --tw-gradient-from: var(--color-blue-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-green-50 {
    --tw-gradient-from: var(--color-green-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-green-500 {
    --tw-gradient-from: var(--color-green-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-indigo-50 {
    --tw-gradient-from: var(--color-indigo-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-orange-500 {
    --tw-gradient-from: var(--color-orange-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-primary-50 {
    --tw-gradient-from: var(--primary-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-primary\/5 {
    --tw-gradient-from: var(--primary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-primary\/5 {
      --tw-gradient-from: color-mix(in oklab, var(--primary) 5%, transparent);
    }
  }

  .from-primary\/20 {
    --tw-gradient-from: var(--primary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-primary\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--primary) 20%, transparent);
    }
  }

  .from-purple-50 {
    --tw-gradient-from: var(--color-purple-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-purple-500 {
    --tw-gradient-from: var(--color-purple-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-secondary\/20 {
    --tw-gradient-from: var(--secondary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-secondary\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--secondary) 20%, transparent);
    }
  }

  .from-transparent {
    --tw-gradient-from: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .via-background {
    --tw-gradient-via: var(--background);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-background\/80 {
    --tw-gradient-via: var(--background);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-background\/80 {
      --tw-gradient-via: color-mix(in oklab, var(--background) 80%, transparent);
    }
  }

  .via-purple-50 {
    --tw-gradient-via: var(--color-purple-50);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-transparent {
    --tw-gradient-via: transparent;
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-white {
    --tw-gradient-via: var(--color-white);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-white\/10 {
    --tw-gradient-via: #ffffff1a;
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-white\/10 {
      --tw-gradient-via: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }

  .to-blue-50 {
    --tw-gradient-to: var(--color-blue-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-blue-500 {
    --tw-gradient-to: var(--color-blue-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-green-50 {
    --tw-gradient-to: var(--color-green-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-green-400 {
    --tw-gradient-to: var(--color-green-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-muted\/30 {
    --tw-gradient-to: var(--muted);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-muted\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--muted) 30%, transparent);
    }
  }

  .to-pink-50 {
    --tw-gradient-to: var(--color-pink-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-primary\/10 {
    --tw-gradient-to: var(--primary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-primary\/10 {
      --tw-gradient-to: color-mix(in oklab, var(--primary) 10%, transparent);
    }
  }

  .to-purple-50 {
    --tw-gradient-to: var(--color-purple-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-red-600 {
    --tw-gradient-to: var(--color-red-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-secondary-50 {
    --tw-gradient-to: var(--secondary-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-secondary\/10 {
    --tw-gradient-to: var(--secondary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-secondary\/10 {
      --tw-gradient-to: color-mix(in oklab, var(--secondary) 10%, transparent);
    }
  }

  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .bg-clip-text {
    background-clip: text;
  }

  .fill-current {
    fill: currentColor;
  }

  .fill-primary {
    fill: var(--primary);
  }

  .p-0 {
    padding: calc(var(--spacing) * 0);
  }

  .p-1 {
    padding: calc(var(--spacing) * 1);
  }

  .p-2 {
    padding: calc(var(--spacing) * 2);
  }

  .p-3 {
    padding: calc(var(--spacing) * 3);
  }

  .p-4 {
    padding: calc(var(--spacing) * 4);
  }

  .p-6 {
    padding: calc(var(--spacing) * 6);
  }

  .p-8 {
    padding: calc(var(--spacing) * 8);
  }

  .p-12 {
    padding: calc(var(--spacing) * 12);
  }

  .p-\[3px\] {
    padding: 3px;
  }

  .p-px {
    padding: 1px;
  }

  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }

  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }

  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }

  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }

  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }

  .py-0\.5 {
    padding-block: calc(var(--spacing) * .5);
  }

  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }

  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }

  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }

  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }

  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }

  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }

  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }

  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }

  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }

  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }

  .pt-0 {
    padding-top: calc(var(--spacing) * 0);
  }

  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }

  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }

  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }

  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }

  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }

  .pt-16 {
    padding-top: calc(var(--spacing) * 16);
  }

  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }

  .pr-8 {
    padding-right: calc(var(--spacing) * 8);
  }

  .pr-10 {
    padding-right: calc(var(--spacing) * 10);
  }

  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }

  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }

  .pl-8 {
    padding-left: calc(var(--spacing) * 8);
  }

  .pl-10 {
    padding-left: calc(var(--spacing) * 10);
  }

  .text-center {
    text-align: center;
  }

  .text-left {
    text-align: left;
  }

  .align-middle {
    vertical-align: middle;
  }

  .font-mono {
    font-family: var(--font-mono);
  }

  .font-sans {
    font-family: var(--font-sans);
  }

  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }

  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }

  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }

  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }

  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }

  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }

  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }

  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }

  .leading-snug {
    --tw-leading: var(--leading-snug);
    line-height: var(--leading-snug);
  }

  .leading-tight {
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
  }

  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }

  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }

  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }

  .tracking-widest {
    --tw-tracking: var(--tracking-widest);
    letter-spacing: var(--tracking-widest);
  }

  .whitespace-nowrap {
    white-space: nowrap;
  }

  .whitespace-pre-wrap {
    white-space: pre-wrap;
  }

  .text-blue-500 {
    color: var(--color-blue-500);
  }

  .text-blue-600 {
    color: var(--color-blue-600);
  }

  .text-blue-700 {
    color: var(--color-blue-700);
  }

  .text-blue-800 {
    color: var(--color-blue-800);
  }

  .text-blue-900 {
    color: var(--color-blue-900);
  }

  .text-card-foreground {
    color: var(--card-foreground);
  }

  .text-current {
    color: currentColor;
  }

  .text-cyan-500 {
    color: var(--color-cyan-500);
  }

  .text-destructive {
    color: var(--destructive);
  }

  .text-emerald-800 {
    color: var(--color-emerald-800);
  }

  .text-foreground {
    color: var(--foreground);
  }

  .text-foreground-muted {
    color: var(--foreground-muted);
  }

  .text-gray-400 {
    color: var(--color-gray-400);
  }

  .text-gray-500 {
    color: var(--color-gray-500);
  }

  .text-gray-600 {
    color: var(--color-gray-600);
  }

  .text-gray-700 {
    color: var(--color-gray-700);
  }

  .text-gray-800 {
    color: var(--color-gray-800);
  }

  .text-gray-900 {
    color: var(--color-gray-900);
  }

  .text-green-500 {
    color: var(--color-green-500);
  }

  .text-green-600 {
    color: var(--color-green-600);
  }

  .text-green-700 {
    color: var(--color-green-700);
  }

  .text-green-800 {
    color: var(--color-green-800);
  }

  .text-muted-foreground {
    color: var(--muted-foreground);
  }

  .text-orange-500 {
    color: var(--color-orange-500);
  }

  .text-orange-600 {
    color: var(--color-orange-600);
  }

  .text-orange-800 {
    color: var(--color-orange-800);
  }

  .text-popover-foreground {
    color: var(--popover-foreground);
  }

  .text-primary {
    color: var(--primary);
  }

  .text-primary-foreground {
    color: var(--primary-foreground);
  }

  .text-primary-foreground\/60 {
    color: var(--primary-foreground);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-primary-foreground\/60 {
      color: color-mix(in oklab, var(--primary-foreground) 60%, transparent);
    }
  }

  .text-primary-foreground\/80 {
    color: var(--primary-foreground);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-primary-foreground\/80 {
      color: color-mix(in oklab, var(--primary-foreground) 80%, transparent);
    }
  }

  .text-purple-500 {
    color: var(--color-purple-500);
  }

  .text-purple-600 {
    color: var(--color-purple-600);
  }

  .text-purple-800 {
    color: var(--color-purple-800);
  }

  .text-red-400 {
    color: var(--color-red-400);
  }

  .text-red-500 {
    color: var(--color-red-500);
  }

  .text-red-600 {
    color: var(--color-red-600);
  }

  .text-red-700 {
    color: var(--color-red-700);
  }

  .text-red-800 {
    color: var(--color-red-800);
  }

  .text-secondary {
    color: var(--secondary);
  }

  .text-secondary-foreground {
    color: var(--secondary-foreground);
  }

  .text-success-foreground {
    color: var(--success-foreground);
  }

  .text-transparent {
    color: #0000;
  }

  .text-warning {
    color: var(--warning);
  }

  .text-warning-foreground {
    color: var(--warning-foreground);
  }

  .text-warning\/80 {
    color: var(--warning);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-warning\/80 {
      color: color-mix(in oklab, var(--warning) 80%, transparent);
    }
  }

  .text-white {
    color: var(--color-white);
  }

  .text-yellow-500 {
    color: var(--color-yellow-500);
  }

  .text-yellow-600 {
    color: var(--color-yellow-600);
  }

  .text-yellow-800 {
    color: var(--color-yellow-800);
  }

  .underline {
    text-decoration-line: underline;
  }

  .underline-offset-4 {
    text-underline-offset: 4px;
  }

  .opacity-0 {
    opacity: 0;
  }

  .opacity-10 {
    opacity: .1;
  }

  .opacity-20 {
    opacity: .2;
  }

  .opacity-30 {
    opacity: .3;
  }

  .opacity-50 {
    opacity: .5;
  }

  .opacity-70 {
    opacity: .7;
  }

  .opacity-75 {
    opacity: .75;
  }

  .opacity-80 {
    opacity: .8;
  }

  .opacity-90 {
    opacity: .9;
  }

  .opacity-100 {
    opacity: 1;
  }

  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-none {
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, #0000000d);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-0 {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-4 {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-success {
    --tw-shadow-color: var(--success);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-success {
      --tw-shadow-color: color-mix(in oklab, var(--success) var(--tw-shadow-alpha), transparent);
    }
  }

  .ring-green-400 {
    --tw-ring-color: var(--color-green-400);
  }

  .ring-offset-background {
    --tw-ring-offset-color: var(--background);
  }

  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .outline-hidden {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .blur-3xl {
    --tw-blur: blur(var(--blur-3xl));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .blur-xl {
    --tw-blur: blur(var(--blur-xl));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .filter {
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .backdrop-blur-md {
    --tw-backdrop-blur: blur(var(--blur-md));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-blur-xl {
    --tw-backdrop-blur: blur(var(--blur-xl));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[color\,box-shadow\] {
    transition-property: color, box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-none {
    transition-property: none;
  }

  .duration-200 {
    --tw-duration: .2s;
    transition-duration: .2s;
  }

  .duration-300 {
    --tw-duration: .3s;
    transition-duration: .3s;
  }

  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }

  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (hover: hover) {
    .group-hover\:w-full:is(:where(.group):hover *) {
      width: 100%;
    }
  }

  @media (hover: hover) {
    .group-hover\:translate-x-0\.5:is(:where(.group):hover *) {
      --tw-translate-x: calc(var(--spacing) * .5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:translate-x-1:is(:where(.group):hover *) {
      --tw-translate-x: calc(var(--spacing) * 1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:-translate-y-0\.5:is(:where(.group):hover *) {
      --tw-translate-y: calc(var(--spacing) * -.5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:scale-105:is(:where(.group):hover *) {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:scale-110:is(:where(.group):hover *) {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:from-primary\/30:is(:where(.group):hover *) {
      --tw-gradient-from: var(--primary);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
      .group-hover\:from-primary\/30:is(:where(.group):hover *) {
        --tw-gradient-from: color-mix(in oklab, var(--primary) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .group-hover\:to-primary\/20:is(:where(.group):hover *) {
      --tw-gradient-to: var(--primary);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
      .group-hover\:to-primary\/20:is(:where(.group):hover *) {
        --tw-gradient-to: color-mix(in oklab, var(--primary) 20%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .group-hover\:text-primary:is(:where(.group):hover *) {
      color: var(--primary);
    }
  }

  @media (hover: hover) {
    .group-hover\:shadow-xl:is(:where(.group):hover *) {
      --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .group-data-\[disabled\=true\]\:pointer-events-none:is(:where(.group)[data-disabled="true"] *) {
    pointer-events: none;
  }

  .group-data-\[disabled\=true\]\:opacity-50:is(:where(.group)[data-disabled="true"] *) {
    opacity: .5;
  }

  .peer-disabled\:cursor-not-allowed:is(:where(.peer):disabled ~ *) {
    cursor: not-allowed;
  }

  .peer-disabled\:opacity-50:is(:where(.peer):disabled ~ *) {
    opacity: .5;
  }

  .selection\:bg-primary ::selection, .selection\:bg-primary::selection {
    background-color: var(--primary);
  }

  .selection\:text-primary-foreground ::selection, .selection\:text-primary-foreground::selection {
    color: var(--primary-foreground);
  }

  .file\:inline-flex::file-selector-button {
    display: inline-flex;
  }

  .file\:h-7::file-selector-button {
    height: calc(var(--spacing) * 7);
  }

  .file\:border-0::file-selector-button {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .file\:bg-transparent::file-selector-button {
    background-color: #0000;
  }

  .file\:text-sm::file-selector-button {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .file\:font-medium::file-selector-button {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .file\:text-foreground::file-selector-button {
    color: var(--foreground);
  }

  .placeholder\:text-muted-foreground::placeholder {
    color: var(--muted-foreground);
  }

  .placeholder\:text-primary-foreground\/60::placeholder {
    color: var(--primary-foreground);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .placeholder\:text-primary-foreground\/60::placeholder {
      color: color-mix(in oklab, var(--primary-foreground) 60%, transparent);
    }
  }

  @media (hover: hover) {
    .hover\:scale-105:hover {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .hover\:border-primary\/50:hover {
      border-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-primary\/50:hover {
        border-color: color-mix(in oklab, var(--primary) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-accent:hover {
      background-color: var(--accent);
    }
  }

  @media (hover: hover) {
    .hover\:bg-accent\/50:hover {
      background-color: var(--accent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-accent\/50:hover {
        background-color: color-mix(in oklab, var(--accent) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-destructive\/10:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-destructive\/10:hover {
        background-color: color-mix(in oklab, var(--destructive) 10%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-destructive\/90:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-destructive\/90:hover {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-muted\/30:hover {
      background-color: var(--muted);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-muted\/30:hover {
        background-color: color-mix(in oklab, var(--muted) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-muted\/50:hover {
      background-color: var(--muted);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-muted\/50:hover {
        background-color: color-mix(in oklab, var(--muted) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-primary:hover {
      background-color: var(--primary);
    }
  }

  @media (hover: hover) {
    .hover\:bg-primary-foreground\/20:hover {
      background-color: var(--primary-foreground);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-primary-foreground\/20:hover {
        background-color: color-mix(in oklab, var(--primary-foreground) 20%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-primary\/10:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-primary\/10:hover {
        background-color: color-mix(in oklab, var(--primary) 10%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-primary\/90:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-primary\/90:hover {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-secondary\/80:hover {
      background-color: var(--secondary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-secondary\/80:hover {
        background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:from-orange-600:hover {
      --tw-gradient-from: var(--color-orange-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-red-700:hover {
      --tw-gradient-to: var(--color-red-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:text-accent-foreground:hover {
      color: var(--accent-foreground);
    }
  }

  @media (hover: hover) {
    .hover\:text-destructive:hover {
      color: var(--destructive);
    }
  }

  @media (hover: hover) {
    .hover\:text-gray-700:hover {
      color: var(--color-gray-700);
    }
  }

  @media (hover: hover) {
    .hover\:text-primary:hover {
      color: var(--primary);
    }
  }

  @media (hover: hover) {
    .hover\:text-primary-foreground:hover {
      color: var(--primary-foreground);
    }
  }

  @media (hover: hover) {
    .hover\:text-warning:hover {
      color: var(--warning);
    }
  }

  @media (hover: hover) {
    .hover\:underline:hover {
      text-decoration-line: underline;
    }
  }

  @media (hover: hover) {
    .hover\:opacity-100:hover {
      opacity: 1;
    }
  }

  @media (hover: hover) {
    .hover\:shadow-lg:hover {
      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-md:hover {
      --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-sm:hover {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-xl:hover {
      --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .focus\:not-sr-only:focus {
    clip: auto;
    white-space: normal;
    width: auto;
    height: auto;
    margin: 0;
    padding: 0;
    position: static;
    overflow: visible;
  }

  .focus\:absolute:focus {
    position: absolute;
  }

  .focus\:top-4:focus {
    top: calc(var(--spacing) * 4);
  }

  .focus\:left-4:focus {
    left: calc(var(--spacing) * 4);
  }

  .focus\:border-transparent:focus {
    border-color: #0000;
  }

  .focus\:bg-accent:focus {
    background-color: var(--accent);
  }

  .focus\:text-accent-foreground:focus {
    color: var(--accent-foreground);
  }

  .focus\:text-destructive:focus {
    color: var(--destructive);
  }

  .focus\:ring-2:focus {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus\:ring-primary\/20:focus {
    --tw-ring-color: var(--primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus\:ring-primary\/20:focus {
      --tw-ring-color: color-mix(in oklab, var(--primary) 20%, transparent);
    }
  }

  .focus\:ring-ring:focus {
    --tw-ring-color: var(--ring);
  }

  .focus\:ring-offset-2:focus {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }

  .focus\:outline-hidden:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .focus\:outline-hidden:focus {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .focus\:outline-none:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  .focus-visible\:border-ring:focus-visible {
    border-color: var(--ring);
  }

  .focus-visible\:ring-\[3px\]:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:ring-destructive\/20:focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-destructive\/20:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .focus-visible\:ring-ring\/50:focus-visible {
    --tw-ring-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-ring\/50:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  .focus-visible\:outline-1:focus-visible {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .focus-visible\:outline-ring:focus-visible {
    outline-color: var(--ring);
  }

  .disabled\:pointer-events-none:disabled {
    pointer-events: none;
  }

  .disabled\:cursor-not-allowed:disabled {
    cursor: not-allowed;
  }

  .disabled\:opacity-50:disabled {
    opacity: .5;
  }

  .has-data-\[slot\=card-action\]\:grid-cols-\[1fr_auto\]:has([data-slot="card-action"]) {
    grid-template-columns: 1fr auto;
  }

  .has-\[\>svg\]\:grid-cols-\[calc\(var\(--spacing\)\*4\)_1fr\]:has( > svg) {
    grid-template-columns: calc(var(--spacing) * 4) 1fr;
  }

  .has-\[\>svg\]\:gap-x-3:has( > svg) {
    column-gap: calc(var(--spacing) * 3);
  }

  .has-\[\>svg\]\:px-2\.5:has( > svg) {
    padding-inline: calc(var(--spacing) * 2.5);
  }

  .has-\[\>svg\]\:px-3:has( > svg) {
    padding-inline: calc(var(--spacing) * 3);
  }

  .has-\[\>svg\]\:px-4:has( > svg) {
    padding-inline: calc(var(--spacing) * 4);
  }

  .aria-invalid\:border-destructive[aria-invalid="true"] {
    border-color: var(--destructive);
  }

  .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .data-\[disabled\]\:pointer-events-none[data-disabled] {
    pointer-events: none;
  }

  .data-\[disabled\]\:opacity-50[data-disabled] {
    opacity: .5;
  }

  .data-\[disabled\=true\]\:pointer-events-none[data-disabled="true"] {
    pointer-events: none;
  }

  .data-\[disabled\=true\]\:opacity-50[data-disabled="true"] {
    opacity: .5;
  }

  .data-\[inset\]\:pl-8[data-inset] {
    padding-left: calc(var(--spacing) * 8);
  }

  .data-\[orientation\=horizontal\]\:h-px[data-orientation="horizontal"] {
    height: 1px;
  }

  .data-\[orientation\=horizontal\]\:w-full[data-orientation="horizontal"] {
    width: 100%;
  }

  .data-\[orientation\=vertical\]\:h-full[data-orientation="vertical"] {
    height: 100%;
  }

  .data-\[orientation\=vertical\]\:w-px[data-orientation="vertical"] {
    width: 1px;
  }

  .data-\[placeholder\]\:text-muted-foreground[data-placeholder] {
    color: var(--muted-foreground);
  }

  .data-\[selected\=true\]\:bg-accent[data-selected="true"] {
    background-color: var(--accent);
  }

  .data-\[selected\=true\]\:text-accent-foreground[data-selected="true"] {
    color: var(--accent-foreground);
  }

  .data-\[side\=bottom\]\:translate-y-1[data-side="bottom"] {
    --tw-translate-y: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=bottom\]\:slide-in-from-top-2[data-side="bottom"] {
    --tw-enter-translate-y: calc(2 * var(--spacing) * -1);
  }

  .data-\[side\=left\]\:-translate-x-1[data-side="left"] {
    --tw-translate-x: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=left\]\:slide-in-from-right-2[data-side="left"] {
    --tw-enter-translate-x: calc(2 * var(--spacing));
  }

  .data-\[side\=right\]\:translate-x-1[data-side="right"] {
    --tw-translate-x: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=right\]\:slide-in-from-left-2[data-side="right"] {
    --tw-enter-translate-x: calc(2 * var(--spacing) * -1);
  }

  .data-\[side\=top\]\:-translate-y-1[data-side="top"] {
    --tw-translate-y: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=top\]\:slide-in-from-bottom-2[data-side="top"] {
    --tw-enter-translate-y: calc(2 * var(--spacing));
  }

  .data-\[size\=default\]\:h-9[data-size="default"] {
    height: calc(var(--spacing) * 9);
  }

  .data-\[size\=sm\]\:h-8[data-size="sm"] {
    height: calc(var(--spacing) * 8);
  }

  :is(.\*\:data-\[slot\=alert-description\]\:text-destructive\/90 > *)[data-slot="alert-description"] {
    color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    :is(.\*\:data-\[slot\=alert-description\]\:text-destructive\/90 > *)[data-slot="alert-description"] {
      color: color-mix(in oklab, var(--destructive) 90%, transparent);
    }
  }

  :is(.\*\*\:data-\[slot\=command-input-wrapper\]\:h-12 *)[data-slot="command-input-wrapper"] {
    height: calc(var(--spacing) * 12);
  }

  :is(.\*\:data-\[slot\=select-value\]\:line-clamp-1 > *)[data-slot="select-value"] {
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  :is(.\*\:data-\[slot\=select-value\]\:flex > *)[data-slot="select-value"] {
    display: flex;
  }

  :is(.\*\:data-\[slot\=select-value\]\:items-center > *)[data-slot="select-value"] {
    align-items: center;
  }

  :is(.\*\:data-\[slot\=select-value\]\:gap-2 > *)[data-slot="select-value"] {
    gap: calc(var(--spacing) * 2);
  }

  .data-\[state\=active\]\:bg-card[data-state="active"] {
    background-color: var(--card);
  }

  .data-\[state\=checked\]\:translate-x-\[calc\(100\%-2px\)\][data-state="checked"] {
    --tw-translate-x: calc(100% - 2px);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[state\=checked\]\:border-primary[data-state="checked"] {
    border-color: var(--primary);
  }

  .data-\[state\=checked\]\:bg-primary[data-state="checked"] {
    background-color: var(--primary);
  }

  .data-\[state\=checked\]\:text-primary-foreground[data-state="checked"] {
    color: var(--primary-foreground);
  }

  .data-\[state\=closed\]\:animate-out[data-state="closed"] {
    animation: exit var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=closed\]\:duration-300[data-state="closed"] {
    --tw-duration: .3s;
    transition-duration: .3s;
  }

  .data-\[state\=closed\]\:fade-out-0[data-state="closed"] {
    --tw-exit-opacity: 0;
  }

  .data-\[state\=closed\]\:slide-out-to-bottom[data-state="closed"] {
    --tw-exit-translate-y: 100%;
  }

  .data-\[state\=closed\]\:slide-out-to-left[data-state="closed"] {
    --tw-exit-translate-x: -100%;
  }

  .data-\[state\=closed\]\:slide-out-to-right[data-state="closed"] {
    --tw-exit-translate-x: 100%;
  }

  .data-\[state\=closed\]\:slide-out-to-top[data-state="closed"] {
    --tw-exit-translate-y: -100%;
  }

  .data-\[state\=closed\]\:zoom-out-95[data-state="closed"] {
    --tw-exit-scale: .95;
  }

  .data-\[state\=open\]\:animate-in[data-state="open"] {
    animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=open\]\:bg-accent[data-state="open"] {
    background-color: var(--accent);
  }

  .data-\[state\=open\]\:bg-secondary[data-state="open"] {
    background-color: var(--secondary);
  }

  .data-\[state\=open\]\:text-accent-foreground[data-state="open"] {
    color: var(--accent-foreground);
  }

  .data-\[state\=open\]\:text-muted-foreground[data-state="open"] {
    color: var(--muted-foreground);
  }

  .data-\[state\=open\]\:duration-500[data-state="open"] {
    --tw-duration: .5s;
    transition-duration: .5s;
  }

  .data-\[state\=open\]\:fade-in-0[data-state="open"] {
    --tw-enter-opacity: 0;
  }

  .data-\[state\=open\]\:slide-in-from-bottom[data-state="open"] {
    --tw-enter-translate-y: 100%;
  }

  .data-\[state\=open\]\:slide-in-from-left[data-state="open"] {
    --tw-enter-translate-x: -100%;
  }

  .data-\[state\=open\]\:slide-in-from-right[data-state="open"] {
    --tw-enter-translate-x: 100%;
  }

  .data-\[state\=open\]\:slide-in-from-top[data-state="open"] {
    --tw-enter-translate-y: -100%;
  }

  .data-\[state\=open\]\:zoom-in-95[data-state="open"] {
    --tw-enter-scale: .95;
  }

  .data-\[state\=selected\]\:bg-muted[data-state="selected"] {
    background-color: var(--muted);
  }

  .data-\[state\=unchecked\]\:translate-x-0[data-state="unchecked"] {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[state\=unchecked\]\:bg-switch-background[data-state="unchecked"] {
    background-color: var(--switch-background);
  }

  .data-\[variant\=destructive\]\:text-destructive[data-variant="destructive"] {
    color: var(--destructive);
  }

  .data-\[variant\=destructive\]\:focus\:bg-destructive\/10[data-variant="destructive"]:focus {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .data-\[variant\=destructive\]\:focus\:bg-destructive\/10[data-variant="destructive"]:focus {
      background-color: color-mix(in oklab, var(--destructive) 10%, transparent);
    }
  }

  .data-\[variant\=destructive\]\:focus\:text-destructive[data-variant="destructive"]:focus {
    color: var(--destructive);
  }

  @media (width >= 40rem) {
    .sm\:flex {
      display: flex;
    }
  }

  @media (width >= 40rem) {
    .sm\:h-14 {
      height: calc(var(--spacing) * 14);
    }
  }

  @media (width >= 40rem) {
    .sm\:w-14 {
      width: calc(var(--spacing) * 14);
    }
  }

  @media (width >= 40rem) {
    .sm\:w-\[400px\] {
      width: 400px;
    }
  }

  @media (width >= 40rem) {
    .sm\:max-w-lg {
      max-width: var(--container-lg);
    }
  }

  @media (width >= 40rem) {
    .sm\:max-w-sm {
      max-width: var(--container-sm);
    }
  }

  @media (width >= 40rem) {
    .sm\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 40rem) {
    .sm\:justify-end {
      justify-content: flex-end;
    }
  }

  @media (width >= 40rem) {
    .sm\:px-6 {
      padding-inline: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 40rem) {
    .sm\:text-left {
      text-align: left;
    }
  }

  @media (width >= 48rem) {
    .md\:right-8 {
      right: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 48rem) {
    .md\:bottom-8 {
      bottom: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 48rem) {
    .md\:block {
      display: block;
    }
  }

  @media (width >= 48rem) {
    .md\:h-80 {
      height: calc(var(--spacing) * 80);
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 48rem) {
    .md\:justify-start {
      justify-content: flex-start;
    }
  }

  @media (width >= 48rem) {
    .md\:p-6 {
      padding: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 48rem) {
    .md\:text-left {
      text-align: left;
    }
  }

  @media (width >= 48rem) {
    .md\:text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:order-1 {
      order: 1;
    }
  }

  @media (width >= 64rem) {
    .lg\:order-2 {
      order: 2;
    }
  }

  @media (width >= 64rem) {
    .lg\:col-span-2 {
      grid-column: span 2 / span 2;
    }
  }

  @media (width >= 64rem) {
    .lg\:block {
      display: block;
    }
  }

  @media (width >= 64rem) {
    .lg\:flex {
      display: flex;
    }
  }

  @media (width >= 64rem) {
    .lg\:hidden {
      display: none;
    }
  }

  @media (width >= 64rem) {
    .lg\:h-full {
      height: 100%;
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-6 {
      grid-template-columns: repeat(6, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:justify-start {
      justify-content: flex-start;
    }
  }

  @media (width >= 64rem) {
    .lg\:p-8 {
      padding: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 64rem) {
    .lg\:px-8 {
      padding-inline: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 64rem) {
    .lg\:text-left {
      text-align: left;
    }
  }

  @media (width >= 64rem) {
    .lg\:text-3xl {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:text-4xl {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:text-7xl {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }

  @media (width >= 80rem) {
    .xl\:inline {
      display: inline;
    }
  }

  .dark\:border-input:is(.dark *) {
    border-color: var(--input);
  }

  .dark\:bg-destructive\/60:is(.dark *) {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-destructive\/60:is(.dark *) {
      background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
    }
  }

  .dark\:bg-gray-800:is(.dark *) {
    background-color: var(--color-gray-800);
  }

  .dark\:bg-green-900\/20:is(.dark *) {
    background-color: color-mix(in srgb, oklch(.393 .095 152.535) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-green-900\/20:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-green-900) 20%, transparent);
    }
  }

  .dark\:bg-green-900\/50:is(.dark *) {
    background-color: color-mix(in srgb, oklch(.393 .095 152.535) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-green-900\/50:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-green-900) 50%, transparent);
    }
  }

  .dark\:bg-input\/30:is(.dark *) {
    background-color: var(--input);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-input\/30:is(.dark *) {
      background-color: color-mix(in oklab, var(--input) 30%, transparent);
    }
  }

  .dark\:bg-red-900\/20:is(.dark *) {
    background-color: color-mix(in srgb, oklch(.396 .141 25.723) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-red-900\/20:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-red-900) 20%, transparent);
    }
  }

  .dark\:from-gray-800:is(.dark *) {
    --tw-gradient-from: var(--color-gray-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-gray-900:is(.dark *) {
    --tw-gradient-from: var(--color-gray-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:via-gray-700:is(.dark *) {
    --tw-gradient-via: var(--color-gray-700);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .dark\:to-gray-600:is(.dark *) {
    --tw-gradient-to: var(--color-gray-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-gray-700:is(.dark *) {
    --tw-gradient-to: var(--color-gray-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-gray-800:is(.dark *) {
    --tw-gradient-to: var(--color-gray-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:text-green-400:is(.dark *) {
    color: var(--color-green-400);
  }

  .dark\:text-muted-foreground:is(.dark *) {
    color: var(--muted-foreground);
  }

  .dark\:text-red-400:is(.dark *) {
    color: var(--color-red-400);
  }

  @media (hover: hover) {
    .dark\:hover\:bg-accent\/50:is(.dark *):hover {
      background-color: var(--accent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-accent\/50:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--accent) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-input\/50:is(.dark *):hover {
      background-color: var(--input);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-input\/50:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--input) 50%, transparent);
      }
    }
  }

  .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .dark\:data-\[state\=active\]\:border-input:is(.dark *)[data-state="active"] {
    border-color: var(--input);
  }

  .dark\:data-\[state\=active\]\:bg-input\/30:is(.dark *)[data-state="active"] {
    background-color: var(--input);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:data-\[state\=active\]\:bg-input\/30:is(.dark *)[data-state="active"] {
      background-color: color-mix(in oklab, var(--input) 30%, transparent);
    }
  }

  .dark\:data-\[state\=active\]\:text-foreground:is(.dark *)[data-state="active"] {
    color: var(--foreground);
  }

  .dark\:data-\[state\=checked\]\:bg-primary:is(.dark *)[data-state="checked"] {
    background-color: var(--primary);
  }

  .dark\:data-\[state\=checked\]\:bg-primary-foreground:is(.dark *)[data-state="checked"] {
    background-color: var(--primary-foreground);
  }

  .dark\:data-\[state\=unchecked\]\:bg-card-foreground:is(.dark *)[data-state="unchecked"] {
    background-color: var(--card-foreground);
  }

  .dark\:data-\[state\=unchecked\]\:bg-input\/80:is(.dark *)[data-state="unchecked"] {
    background-color: var(--input);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:data-\[state\=unchecked\]\:bg-input\/80:is(.dark *)[data-state="unchecked"] {
      background-color: color-mix(in oklab, var(--input) 80%, transparent);
    }
  }

  .dark\:data-\[variant\=destructive\]\:focus\:bg-destructive\/20:is(.dark *)[data-variant="destructive"]:focus {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:data-\[variant\=destructive\]\:focus\:bg-destructive\/20:is(.dark *)[data-variant="destructive"]:focus {
      background-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .\[\&_\[cmdk-group-heading\]\]\:px-2 [cmdk-group-heading] {
    padding-inline: calc(var(--spacing) * 2);
  }

  .\[\&_\[cmdk-group-heading\]\]\:py-1\.5 [cmdk-group-heading] {
    padding-block: calc(var(--spacing) * 1.5);
  }

  .\[\&_\[cmdk-group-heading\]\]\:text-xs [cmdk-group-heading] {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .\[\&_\[cmdk-group-heading\]\]\:font-medium [cmdk-group-heading] {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .\[\&_\[cmdk-group-heading\]\]\:text-muted-foreground [cmdk-group-heading] {
    color: var(--muted-foreground);
  }

  .\[\&_\[cmdk-group\]\]\:px-2 [cmdk-group] {
    padding-inline: calc(var(--spacing) * 2);
  }

  .\[\&_\[cmdk-group\]\:not\(\[hidden\]\)_\~\[cmdk-group\]\]\:pt-0 [cmdk-group]:not([hidden]) ~ [cmdk-group] {
    padding-top: calc(var(--spacing) * 0);
  }

  .\[\&_\[cmdk-input-wrapper\]_svg\]\:h-5 [cmdk-input-wrapper] svg {
    height: calc(var(--spacing) * 5);
  }

  .\[\&_\[cmdk-input-wrapper\]_svg\]\:w-5 [cmdk-input-wrapper] svg {
    width: calc(var(--spacing) * 5);
  }

  .\[\&_\[cmdk-input\]\]\:h-12 [cmdk-input] {
    height: calc(var(--spacing) * 12);
  }

  .\[\&_\[cmdk-item\]\]\:px-2 [cmdk-item] {
    padding-inline: calc(var(--spacing) * 2);
  }

  .\[\&_\[cmdk-item\]\]\:py-3 [cmdk-item] {
    padding-block: calc(var(--spacing) * 3);
  }

  .\[\&_\[cmdk-item\]_svg\]\:h-5 [cmdk-item] svg {
    height: calc(var(--spacing) * 5);
  }

  .\[\&_\[cmdk-item\]_svg\]\:w-5 [cmdk-item] svg {
    width: calc(var(--spacing) * 5);
  }

  .\[\&_p\]\:leading-relaxed p {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }

  .\[\&_svg\]\:pointer-events-none svg {
    pointer-events: none;
  }

  .\[\&_svg\]\:shrink-0 svg {
    flex-shrink: 0;
  }

  .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&_svg\:not\(\[class\*\=\'text-\'\]\)\]\:text-muted-foreground svg:not([class*="text-"]) {
    color: var(--muted-foreground);
  }

  .\[\&_tr\]\:border-b tr {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .\[\&_tr\:last-child\]\:border-0 tr:last-child {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .\[\&\:has\(\[role\=checkbox\]\)\]\:pr-0:has([role="checkbox"]) {
    padding-right: calc(var(--spacing) * 0);
  }

  .\[\.border-b\]\:pb-6.border-b {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .\[\.border-t\]\:pt-6.border-t {
    padding-top: calc(var(--spacing) * 6);
  }

  :is(.\*\:\[span\]\:last\:flex > *):is(span):last-child {
    display: flex;
  }

  :is(.\*\:\[span\]\:last\:items-center > *):is(span):last-child {
    align-items: center;
  }

  :is(.\*\:\[span\]\:last\:gap-2 > *):is(span):last-child {
    gap: calc(var(--spacing) * 2);
  }

  :is(.data-\[variant\=destructive\]\:\*\:\[svg\]\:\!text-destructive[data-variant="destructive"] > *):is(svg) {
    color: var(--destructive) !important;
  }

  .\[\&\:last-child\]\:pb-6:last-child {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .\[\&\>\[role\=checkbox\]\]\:translate-y-\[2px\] > [role="checkbox"] {
    --tw-translate-y: 2px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .\[\&\>svg\]\:pointer-events-none > svg {
    pointer-events: none;
  }

  .\[\&\>svg\]\:size-3 > svg {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }

  .\[\&\>svg\]\:size-4 > svg {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&\>svg\]\:translate-y-0\.5 > svg {
    --tw-translate-y: calc(var(--spacing) * .5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .\[\&\>svg\]\:text-current > svg {
    color: currentColor;
  }

  .\[\&\>tr\]\:last\:border-b-0 > tr:last-child {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 0;
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-accent:hover {
      background-color: var(--accent);
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-destructive\/90:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-destructive\/90:hover {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-primary\/90:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-primary\/90:hover {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-secondary\/90:hover {
      background-color: var(--secondary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-secondary\/90:hover {
        background-color: color-mix(in oklab, var(--secondary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:text-accent-foreground:hover {
      color: var(--accent-foreground);
    }
  }

  .bg-brand-gradient {
    background: var(--brand-gradient);
  }

  .bg-brand-orange {
    background-color: var(--brand-orange);
  }

  .bg-brand-red {
    background-color: var(--brand-red);
  }

  .bg-brand-blue {
    background-color: var(--brand-bootstrap-blue);
  }

  .text-brand-orange {
    color: var(--brand-orange);
  }

  .text-brand-red {
    color: var(--brand-red);
  }

  .text-brand-blue {
    color: var(--brand-bootstrap-blue);
  }

  .card-modern {
    background: var(--card);
    border: 1px solid var(--card-border);
    border-radius: var(--radius-lg);
    box-shadow: var(--card-shadow);
    transition: all .3s;
  }

  .card-modern:hover {
    box-shadow: var(--card-shadow-lg);
    transform: translateY(-2px);
  }

  .card-elevated {
    background: var(--surface-elevated);
    border: 1px solid var(--card-border);
    border-radius: var(--radius-lg);
    box-shadow: var(--card-shadow-lg);
  }

  .austria-border {
    border-top: 3px solid var(--brand-austria-red);
    border-bottom: 3px solid var(--brand-austria-red);
    position: relative;
  }

  .austria-border:before {
    content: "";
    background: var(--brand-austria-white);
    height: 3px;
    position: absolute;
    top: 3px;
    left: 0;
    right: 0;
  }

  .btn-primary-gradient {
    background: linear-gradient(135deg, var(--primary) 0%, var(--primary-700) 100%);
    color: var(--primary-foreground);
    border: none;
    transition: all .3s;
  }

  .btn-primary-gradient:hover {
    background: linear-gradient(135deg, var(--primary-700) 0%, var(--primary-800) 100%);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px #0d6efd4d;
  }

  .btn-secondary-gradient {
    background: var(--brand-gradient);
    color: #fff;
    border: none;
    transition: all .3s;
  }

  .btn-secondary-gradient:hover {
    background: linear-gradient(135deg, var(--secondary-600) 0%, var(--secondary-700) 100%);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px #ff6b354d;
  }

  .section-padding {
    padding: 3rem 0;
  }

  .section-padding-lg {
    padding: 4rem 0;
  }

  .section-padding-sm {
    padding: 2rem 0;
  }

  @media (width >= 768px) {
    .section-padding {
      padding: 5rem 0;
    }

    .section-padding-lg {
      padding: 7rem 0;
    }

    .section-padding-sm {
      padding: 3rem 0;
    }
  }

  .container-mobile {
    max-width: 100%;
    padding-left: 1rem;
    padding-right: 1rem;
  }

  @media (width >= 640px) {
    .container-mobile {
      padding-left: 1.5rem;
      padding-right: 1.5rem;
    }
  }

  @media (width >= 1024px) {
    .container-mobile {
      padding-left: 2rem;
      padding-right: 2rem;
    }
  }

  .btn-touch {
    min-width: 44px;
    min-height: 44px;
    padding: .75rem 1.5rem;
    font-size: 1rem;
  }

  @media (width >= 768px) {
    .btn-touch {
      min-height: auto;
      padding: .5rem 1rem;
      font-size: .875rem;
    }
  }

  .card-mobile {
    border-radius: var(--radius-lg);
    margin-bottom: 1rem;
  }

  @media (width >= 768px) {
    .card-mobile {
      margin-bottom: 1.5rem;
    }
  }

  .stack-mobile {
    flex-direction: column;
    gap: 1rem;
    display: flex;
  }

  @media (width >= 768px) {
    .stack-mobile {
      flex-direction: row;
      gap: 1.5rem;
    }
  }

  .mobile-only {
    display: block;
  }

  .desktop-only {
    display: none;
  }

  @media (width >= 768px) {
    .mobile-only {
      display: none;
    }

    .desktop-only {
      display: block;
    }
  }

  .touch-spacing {
    padding: 1rem;
  }

  @media (width >= 768px) {
    .touch-spacing {
      padding: 1.5rem;
    }
  }

  .grid-mobile {
    grid-template-columns: 1fr;
    gap: 1rem;
    display: grid;
  }

  @media (width >= 640px) {
    .grid-mobile {
      grid-template-columns: repeat(2, 1fr);
      gap: 1.5rem;
    }
  }

  @media (width >= 1024px) {
    .grid-mobile {
      grid-template-columns: repeat(3, 1fr);
      gap: 2rem;
    }
  }

  .grid-tablet {
    grid-template-columns: 1fr;
    gap: 1rem;
    display: grid;
  }

  @media (width >= 640px) {
    .grid-tablet {
      grid-template-columns: repeat(2, 1fr);
      gap: 1.5rem;
    }
  }

  @media (width >= 1024px) {
    .grid-tablet {
      grid-template-columns: repeat(2, 1fr);
      gap: 2rem;
    }
  }

  .text-balance {
    text-wrap: balance;
  }

  .text-gradient {
    background: var(--brand-gradient);
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .animate-fade-in {
    animation: .6s ease-out fadeIn;
  }

  .animate-slide-up {
    animation: .6s ease-out slideUp;
  }

  .animate-scale-in {
    animation: .4s ease-out scaleIn;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }

    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: scale(.95);
    }

    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  .interactive-hover {
    transition: all .3s;
  }

  .interactive-hover:hover {
    box-shadow: var(--card-shadow-lg);
    transform: translateY(-2px);
  }

  .glass {
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(10px);
    background: #ffffff1a;
    border: 1px solid #fff3;
  }

  .glass-dark {
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(10px);
    background: #0000001a;
    border: 1px solid #ffffff1a;
  }

  .democracy-pulse {
    animation: 2s ease-in-out infinite democracyPulse;
  }

  .stakeholder-hover {
    transition: all .3s;
  }

  .stakeholder-hover:hover {
    transform: translateY(-2px)scale(1.05);
    box-shadow: 0 8px 24px #00000026;
  }

  .level-card-hover {
    transition: all .4s cubic-bezier(.4, 0, .2, 1);
  }

  .level-card-hover:hover {
    transform: translateY(-4px)rotateY(5deg);
    box-shadow: 0 12px 32px #0003;
  }

  .bridge-connection {
    stroke-dasharray: 10 5;
    animation: 3s linear infinite bridgeFlow;
  }

  @keyframes democracyPulse {
    0%, 100% {
      opacity: .8;
      transform: scale(1);
    }

    50% {
      opacity: 1;
      transform: scale(1.02);
    }
  }

  @keyframes bridgeFlow {
    0% {
      stroke-dashoffset: 0;
    }

    100% {
      stroke-dashoffset: 15px;
    }
  }

  .svg-icon-hover {
    transition: transform .3s;
  }

  .svg-icon-hover:hover {
    transform: scale(1.1)rotate(5deg);
  }

  .progress-segment {
    transition: all .5s;
  }

  .progress-segment.completed {
    fill: var(--color-success);
    animation: .6s ease-out progressComplete;
  }

  @keyframes progressComplete {
    0% {
      opacity: .5;
      transform: scale(1);
    }

    50% {
      opacity: 1;
      transform: scale(1.2);
    }

    100% {
      opacity: 1;
      transform: scale(1);
    }
  }

  .interactive-node {
    cursor: pointer;
    transition: all .3s;
  }

  .interactive-node:hover {
    filter: brightness(1.1);
    transform: scale(1.05);
  }

  .interactive-node:active {
    transform: scale(.95);
  }

  .network-connection {
    stroke-width: 2px;
    transition: stroke-width .3s;
  }

  .network-connection.active {
    stroke-width: 4px;
    animation: 1.5s ease-in-out infinite networkPulse;
  }

  @keyframes networkPulse {
    0%, 100% {
      opacity: .6;
    }

    50% {
      opacity: 1;
    }
  }

  .fact-check-correct {
    background: linear-gradient(135deg, #dcfce7 0%, #bbf7d0 100%);
    border-color: #22c55e;
    animation: .6s ease-out correctAnswer;
  }

  .fact-check-incorrect {
    background: linear-gradient(135deg, #fee2e2 0%, #fecaca 100%);
    border-color: #ef4444;
    animation: .6s ease-out incorrectAnswer;
  }

  @keyframes correctAnswer {
    0% {
      transform: scale(1);
      box-shadow: 0 0 #22c55eb3;
    }

    70% {
      transform: scale(1.02);
      box-shadow: 0 0 0 10px #22c55e00;
    }

    100% {
      transform: scale(1);
      box-shadow: 0 0 #22c55e00;
    }
  }

  @keyframes incorrectAnswer {
    0% {
      transform: scale(1);
      box-shadow: 0 0 #ef4444b3;
    }

    70% {
      transform: scale(1.02);
      box-shadow: 0 0 0 10px #ef444400;
    }

    100% {
      transform: scale(1);
      box-shadow: 0 0 #ef444400;
    }
  }

  .chapter-node {
    transition: all .4s cubic-bezier(.4, 0, .2, 1);
  }

  .chapter-node:hover {
    filter: drop-shadow(0 8px 16px #0000004d);
  }

  .chapter-path {
    stroke-dasharray: 300;
    stroke-dashoffset: 300px;
    animation: 2s ease-in-out forwards drawPath;
  }

  @keyframes drawPath {
    to {
      stroke-dashoffset: 0;
    }
  }

  .editor-section {
    border-left: 4px solid #0000;
    transition: border-color .3s;
  }

  .editor-section.active {
    border-left-color: var(--color-primary);
    background: var(--color-primary-50);
  }

  .stakeholder-card {
    position: relative;
    overflow: hidden;
  }

  .stakeholder-card:before {
    content: "";
    background: var(--brand-gradient);
    width: 100%;
    height: 2px;
    transition: left .5s;
    position: absolute;
    top: 0;
    left: -100%;
  }

  .stakeholder-card:hover:before {
    left: 0;
  }

  .enhanced-3d-card {
    perspective: 1000px;
    transform-style: preserve-3d;
  }

  .enhanced-3d-card:hover {
    transform: rotateY(5deg)rotateX(5deg)translateZ(10px);
  }

  .holographic-border {
    position: relative;
    overflow: hidden;
  }

  .holographic-border:before {
    content: "";
    background: linear-gradient(90deg, #0000, #fff6, #0000);
    width: 100%;
    height: 100%;
    transition: left .5s;
    position: absolute;
    top: 0;
    left: -100%;
  }

  .holographic-border:hover:before {
    left: 100%;
  }

  .particle-trail {
    position: relative;
  }

  .particle-trail:after {
    content: "";
    background: radial-gradient(circle, #3b82f6, #0000);
    border-radius: 50%;
    width: 4px;
    height: 4px;
    animation: 2s linear infinite particleTrail;
    position: absolute;
  }

  @keyframes particleTrail {
    0% {
      opacity: 1;
      transform: translate(0)scale(1);
    }

    100% {
      opacity: 0;
      transform: translate(100px, -50px)scale(0);
    }
  }

  .advanced-glow {
    position: relative;
  }

  .advanced-glow:before {
    content: "";
    border-radius: inherit;
    opacity: 0;
    z-index: -1;
    background: conic-gradient(#3b82f6, #8b5cf6, #ef4444, #22c55e, #3b82f6);
    transition: opacity .3s;
    animation: 3s linear infinite rotateGlow;
    position: absolute;
    inset: -2px;
  }

  .advanced-glow:hover:before {
    opacity: .7;
  }

  @keyframes rotateGlow {
    0% {
      transform: rotate(0);
    }

    100% {
      transform: rotate(360deg);
    }
  }

  .floating-element {
    animation: 6s ease-in-out infinite floating;
  }

  @keyframes floating {
    0%, 100% {
      transform: translateY(0);
    }

    50% {
      transform: translateY(-20px);
    }
  }

  .glass-reflection {
    position: relative;
    overflow: hidden;
  }

  .glass-reflection:after {
    content: "";
    background: linear-gradient(45deg, #0000 30%, #ffffff1a 50%, #0000 70%);
    width: 200%;
    height: 200%;
    animation: 3s ease-in-out infinite glassReflection;
    position: absolute;
    top: -50%;
    left: -50%;
    transform: rotate(45deg);
  }

  @keyframes glassReflection {
    0%, 100% {
      transform: translateX(-100%)translateY(-100%)rotate(45deg);
    }

    50% {
      transform: translateX(100%)translateY(100%)rotate(45deg);
    }
  }

  .text-glow {
    text-shadow: 0 0 5px, 0 0 10px, 0 0 15px, 0 0 20px;
    animation: 2s ease-in-out infinite alternate textGlow;
  }

  @keyframes textGlow {
    from {
      text-shadow: 0 0 5px, 0 0 10px, 0 0 15px, 0 0 20px;
    }

    to {
      text-shadow: 0 0 2px, 0 0 5px, 0 0 8px, 0 0 12px;
    }
  }

  .morphing-shape {
    animation: 4s ease-in-out infinite morphShape;
  }

  @keyframes morphShape {
    0%, 100% {
      border-radius: 50% 30% 70% 40%;
    }

    25% {
      border-radius: 30% 60% 40% 70%;
    }

    50% {
      border-radius: 70% 40% 30% 60%;
    }

    75% {
      border-radius: 40% 70% 60% 30%;
    }
  }

  .energy-pulse {
    position: relative;
  }

  .energy-pulse:before, .energy-pulse:after {
    content: "";
    border-radius: inherit;
    background: inherit;
    opacity: .7;
    animation: 2s ease-out infinite energyPulse;
    position: absolute;
    inset: 0;
  }

  .energy-pulse:after {
    animation-delay: 1s;
  }

  @keyframes energyPulse {
    0% {
      opacity: .7;
      transform: scale(1);
    }

    100% {
      opacity: 0;
      transform: scale(1.2);
    }
  }

  @media (width <= 640px) {
    h1 {
      font-size: 2rem !important;
      line-height: 1.3 !important;
    }

    h2 {
      font-size: 1.75rem !important;
      line-height: 1.4 !important;
    }

    h3 {
      font-size: 1.5rem !important;
      line-height: 1.4 !important;
    }

    h4 {
      font-size: 1.25rem !important;
      line-height: 1.5 !important;
    }

    .lead {
      font-size: 1.125rem !important;
    }
  }

  @media (width >= 641px) and (width <= 1024px) {
    h1 {
      font-size: 2.5rem !important;
    }

    h2 {
      font-size: 2rem !important;
    }
  }

  @media (width <= 768px) {
    .svg-icon-hover:hover {
      transform: none;
    }

    .level-card-hover:hover {
      transform: translateY(-2px);
    }

    .stakeholder-hover:hover, .enhanced-3d-card:hover {
      transform: none;
    }

    .floating-element {
      animation-duration: 8s;
    }

    .particle-trail:after {
      display: none;
    }

    .advanced-glow:before {
      animation: none;
    }

    button, a, input, select, textarea {
      min-height: 44px;
    }

    button, a {
      -webkit-tap-highlight-color: #0d6efd1a;
    }

    .card-modern, .card-elevated {
      margin-bottom: 1rem;
    }

    .btn-group {
      flex-direction: column;
      gap: .75rem;
      display: flex;
    }

    .btn-group button {
      width: 100%;
    }
  }

  @media (width >= 641px) and (width <= 1024px) {
    .grid-mobile {
      grid-template-columns: repeat(2, 1fr);
    }

    .tablet-cols-2 {
      grid-template-columns: repeat(2, 1fr) !important;
    }

    .section-padding {
      padding: 4rem 0;
    }
  }

  @media (width >= 480px) and (width <= 640px) {
    .grid-mobile {
      grid-template-columns: repeat(2, 1fr);
      gap: 1rem;
    }
  }

  @media (hover: none) and (pointer: coarse) {
    .interactive-hover:hover, .card-modern:hover, .btn-primary-gradient:hover, .btn-secondary-gradient:hover {
      transform: none;
    }

    button:active, a:active {
      transition: transform .1s;
      transform: scale(.95);
    }

    button, a, [role="button"], input[type="submit"], input[type="button"] {
      min-width: 44px;
      min-height: 44px;
      padding: .75rem 1rem;
    }

    :focus-visible {
      outline: 3px solid var(--ring);
      outline-offset: 3px;
    }
  }

  @media (width <= 768px) {
    .game-card {
      width: 100%;
      margin-left: 0;
      margin-right: 0;
    }

    .game-choices {
      flex-direction: column;
      gap: .75rem;
      display: flex;
    }

    .game-button {
      min-height: 56px;
      padding: 1rem 1.5rem;
      font-size: 1rem;
    }

    .game-animation {
      animation-duration: .3s;
    }

    .complex-viz {
      display: none;
    }

    .simple-viz {
      display: block;
    }

    .skill-tree {
      flex-direction: column;
      gap: 1rem;
      display: flex;
    }

    .achievement-grid, .lobby-layout {
      grid-template-columns: 1fr !important;
    }

    .game-fullscreen {
      z-index: 100;
      background: var(--background);
      padding: 1rem;
      position: fixed;
      inset: 0;
      overflow-y: auto;
    }

    .modal-mobile {
      border-radius: 0;
      max-width: 100%;
      max-height: 100%;
      margin: 0;
      position: fixed;
      inset: 0;
    }

    .game-action-bar {
      background: var(--background);
      border-top: 1px solid var(--border);
      z-index: 50;
      padding: 1rem;
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      box-shadow: 0 -4px 12px #0000001a;
    }
  }

  @media (width >= 641px) and (width <= 1024px) {
    .game-grid {
      grid-template-columns: repeat(2, 1fr);
    }

    .game-card {
      padding: 1.5rem;
    }

    .skill-tree {
      grid-template-columns: repeat(2, 1fr);
      gap: 1.5rem;
    }

    .achievement-grid {
      grid-template-columns: repeat(2, 1fr) !important;
    }
  }

  @media (height <= 500px) and (orientation: landscape) {
    nav {
      height: 48px;
    }

    .decorative-element {
      display: none;
    }

    .section-padding {
      padding: 2rem 0;
    }

    .game-header {
      padding: .5rem 1rem;
    }

    .game-layout-landscape {
      grid-template-columns: 1fr 1fr;
      gap: 1rem;
      display: grid;
    }
  }

  @media (prefers-contrast: high) {
    .advanced-glow:before, .holographic-border:before, .glass-reflection:after {
      display: none;
    }

    .text-glow {
      text-shadow: none;
      font-weight: bold;
    }

    .card-modern, .card-elevated {
      border: 2px solid var(--border);
    }

    :focus-visible {
      outline: 3px solid var(--ring);
      outline-offset: 3px;
    }
  }

  @media print {
    nav, .game-action-bar, button, .mobile-only {
      display: none !important;
    }

    body {
      color: #000;
      background: #fff;
    }

    .card-modern, .card-elevated {
      box-shadow: none;
      break-inside: avoid;
      border: 1px solid #000;
    }

    section {
      break-after: page;
    }
  }

  @media (display-mode: standalone) {
    body {
      padding-top: env(safe-area-inset-top);
      padding-bottom: env(safe-area-inset-bottom);
      padding-left: env(safe-area-inset-left);
      padding-right: env(safe-area-inset-right);
    }

    nav {
      padding-top: calc(env(safe-area-inset-top)  + .5rem);
    }

    .game-action-bar {
      padding-bottom: calc(1rem + env(safe-area-inset-bottom));
    }
  }

  @supports (-webkit-touch-callout: none) {
    input, textarea, select {
      font-size: 16px !important;
    }

    body {
      -webkit-overflow-scrolling: touch;
    }

    .full-height {
      height: -webkit-fill-available;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .floating-element, .morphing-shape, .energy-pulse:before, .energy-pulse:after, .particle-trail:after, .advanced-glow:before {
      animation: none;
    }

    .enhanced-3d-card, .level-card-hover, .stakeholder-hover {
      transition: none;
    }

    .text-glow {
      animation: none;
    }
  }

  .text-responsive-xl {
    font-size: 1.5rem;
  }

  @media (width >= 768px) {
    .text-responsive-xl {
      font-size: 2rem;
    }
  }

  @media (width >= 1024px) {
    .text-responsive-xl {
      font-size: 2.5rem;
    }
  }

  .text-responsive-lg {
    font-size: 1.25rem;
  }

  @media (width >= 768px) {
    .text-responsive-lg {
      font-size: 1.5rem;
    }
  }

  @media (width >= 1024px) {
    .text-responsive-lg {
      font-size: 1.875rem;
    }
  }

  .space-mobile {
    padding: .75rem;
  }

  @media (width >= 768px) {
    .space-mobile {
      padding: 1.5rem;
    }
  }

  @media (width >= 1024px) {
    .space-mobile {
      padding: 2rem;
    }
  }

  .gap-mobile {
    gap: .75rem;
  }

  @media (width >= 768px) {
    .gap-mobile {
      gap: 1.5rem;
    }
  }

  @media (width >= 1024px) {
    .gap-mobile {
      gap: 2rem;
    }
  }

  .safe-container {
    padding-left: max(1rem, env(safe-area-inset-left));
    padding-right: max(1rem, env(safe-area-inset-right));
  }

  .flex-mobile {
    flex-direction: column;
    gap: 1rem;
    display: flex;
  }

  @media (width >= 768px) {
    .flex-mobile {
      flex-direction: row;
      gap: 1.5rem;
    }
  }

  .hide-mobile {
    display: none;
  }

  @media (width >= 768px) {
    .hide-mobile {
      display: block;
    }
  }

  .show-mobile {
    display: block;
  }

  @media (width >= 768px) {
    .show-mobile {
      display: none;
    }
  }

  .hide-tablet {
    display: block;
  }

  @media (width >= 641px) and (width <= 1024px) {
    .hide-tablet {
      display: none;
    }
  }

  .show-tablet {
    display: none;
  }

  @media (width >= 641px) and (width <= 1024px) {
    .show-tablet {
      display: block;
    }
  }

  .img-mobile {
    object-fit: cover;
    border-radius: var(--radius-lg);
    width: 100%;
    height: auto;
  }

  .swipeable {
    touch-action: pan-x;
    -webkit-user-select: none;
    user-select: none;
    cursor: grab;
  }

  .swipeable:active {
    cursor: grabbing;
  }

  .pull-refresh {
    background: var(--background);
    justify-content: center;
    align-items: center;
    height: 60px;
    transition: transform .3s;
    display: flex;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    transform: translateY(-100%);
  }

  .pull-refresh.active {
    transform: translateY(0);
  }

  .scroll-mobile {
    scroll-snap-type: x mandatory;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none;
    overflow: auto hidden;
  }

  .scroll-mobile::-webkit-scrollbar {
    display: none;
  }

  .scroll-mobile > * {
    scroll-snap-align: start;
  }

  .bottom-sheet {
    background: var(--background);
    border-top-left-radius: var(--radius-xl);
    border-top-right-radius: var(--radius-xl);
    z-index: 100;
    transition: transform .3s;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    transform: translateY(100%);
    box-shadow: 0 -4px 16px #0000001a;
  }

  .bottom-sheet.open {
    transform: translateY(0);
  }

  .bottom-sheet-handle {
    background: var(--muted-foreground);
    border-radius: 2px;
    width: 40px;
    height: 4px;
    margin: .75rem auto;
  }

  .fab {
    bottom: calc(1rem + env(safe-area-inset-bottom));
    background: var(--primary);
    width: 56px;
    height: 56px;
    color: var(--primary-foreground);
    cursor: pointer;
    z-index: 90;
    border-radius: 50%;
    justify-content: center;
    align-items: center;
    transition: all .3s;
    display: flex;
    position: fixed;
    right: 1rem;
    box-shadow: 0 4px 12px #00000026;
  }

  .fab:hover {
    transform: scale(1.1);
    box-shadow: 0 6px 16px #0003;
  }

  .fab:active {
    transform: scale(.95);
  }

  .scroll-progress {
    background: var(--muted);
    z-index: 51;
    height: 3px;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
  }

  .scroll-progress-bar {
    background: var(--brand-gradient);
    width: 0%;
    height: 100%;
    transition: width .1s;
  }

  .keyboard-spacing {
    padding-bottom: env(keyboard-inset-height, 0px);
  }

  .touch-ripple {
    position: relative;
    overflow: hidden;
  }

  .touch-ripple:after {
    content: "";
    opacity: 0;
    pointer-events: none;
    background: radial-gradient(circle, #ffffff4d 0%, #0000 70%);
    position: absolute;
    inset: 0;
    transform: scale(0);
  }

  .touch-ripple:active:after {
    opacity: 1;
    transition: transform .5s, opacity .5s;
    transform: scale(2);
  }

  .form-mobile input, .form-mobile textarea, .form-mobile select {
    min-height: 44px;
    padding: .75rem 1rem;
    font-size: 16px;
  }

  .form-mobile label {
    margin-bottom: .5rem;
    font-size: .875rem;
    display: block;
  }

  .form-mobile button[type="submit"] {
    width: 100%;
    min-height: 48px;
    margin-top: 1rem;
  }

  .card-stack-mobile {
    flex-direction: column;
    gap: 1rem;
    display: flex;
  }

  @media (width >= 768px) {
    .card-stack-mobile {
      grid-template-columns: repeat(2, 1fr);
      gap: 1.5rem;
      display: grid;
    }
  }

  @media (width >= 1024px) {
    .card-stack-mobile {
      grid-template-columns: repeat(3, 1fr);
      gap: 2rem;
    }
  }

  .skeleton {
    background: linear-gradient(90deg, var(--muted) 0%, var(--muted-hover) 50%, var(--muted) 100%);
    border-radius: var(--radius);
    background-size: 200% 100%;
    animation: 1.5s ease-in-out infinite skeleton-loading;
  }

  @keyframes skeleton-loading {
    0% {
      background-position: 200% 0;
    }

    100% {
      background-position: -200% 0;
    }
  }

  .skeleton-text {
    height: 1rem;
    margin-bottom: .5rem;
  }

  .skeleton-title {
    width: 60%;
    height: 2rem;
    margin-bottom: 1rem;
  }

  .skeleton-avatar {
    border-radius: 50%;
    width: 3rem;
    height: 3rem;
  }

  .skeleton-card {
    width: 100%;
    height: 200px;
  }

  .grid-auto-fit {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    display: grid;
  }

  .grid-auto-fill {
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1.5rem;
    display: grid;
  }

  .grid-masonry {
    column-count: 1;
    column-gap: 1rem;
  }

  @media (width >= 640px) {
    .grid-masonry {
      column-count: 2;
    }
  }

  @media (width >= 1024px) {
    .grid-masonry {
      column-count: 3;
      column-gap: 1.5rem;
    }
  }

  .grid-masonry > * {
    break-inside: avoid;
    margin-bottom: 1rem;
  }

  .scroll-snap-x {
    scroll-snap-type: x mandatory;
    -webkit-overflow-scrolling: touch;
    overflow-x: auto;
  }

  .scroll-snap-y {
    scroll-snap-type: y mandatory;
    -webkit-overflow-scrolling: touch;
    overflow-y: auto;
  }

  .scroll-snap-start {
    scroll-snap-align: start;
  }

  .scroll-snap-center {
    scroll-snap-align: center;
  }

  .scroll-snap-end {
    scroll-snap-align: end;
  }

  @container (width >= 400px) {
    .container-sm\:grid-cols-2 {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @container (width >= 600px) {
    .container-md\:grid-cols-3 {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .text-gradient-primary {
    background: linear-gradient(135deg, var(--primary) 0%, var(--primary-700) 100%);
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .text-gradient-secondary {
    background: var(--brand-gradient);
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .text-gradient-success {
    background: linear-gradient(135deg, #16a34a 0%, #22c55e 100%);
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .text-gradient-rainbow {
    background: linear-gradient(135deg, #3b82f6, #8b5cf6, #ec4899, #f59e0b);
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .backdrop-blur-xs {
    -webkit-backdrop-filter: blur(2px);
  }

  .backdrop-blur-sm {
    -webkit-backdrop-filter: blur(4px);
  }

  .backdrop-blur-md {
    -webkit-backdrop-filter: blur(8px);
  }

  .backdrop-blur-lg {
    -webkit-backdrop-filter: blur(16px);
  }

  .backdrop-blur-xl {
    -webkit-backdrop-filter: blur(24px);
  }

  .border-gradient {
    background-image: linear-gradient(var(--background), var(--background)), var(--brand-gradient);
    background-origin: border-box;
    background-clip: padding-box, border-box;
    border: 2px solid #0000;
  }

  .border-gradient-primary {
    background-image: linear-gradient(var(--background), var(--background)), linear-gradient(135deg, var(--primary) 0%, var(--primary-700) 100%);
    background-origin: border-box;
    background-clip: padding-box, border-box;
    border: 2px solid #0000;
  }

  .aspect-square {
    aspect-ratio: 1;
  }

  .aspect-video {
    aspect-ratio: 16 / 9;
  }

  .aspect-portrait {
    aspect-ratio: 3 / 4;
  }

  .aspect-landscape {
    aspect-ratio: 4 / 3;
  }

  .aspect-ultrawide {
    aspect-ratio: 21 / 9;
  }

  .truncate-1 {
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .truncate-2 {
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .truncate-3 {
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .truncate-4 {
    -webkit-line-clamp: 4;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .shadow-brand {
    box-shadow: 0 4px 12px #ff6b3540;
  }

  .shadow-brand-lg {
    box-shadow: 0 8px 24px #ff6b3559;
  }

  .shadow-primary {
    box-shadow: 0 4px 12px #0d6efd40;
  }

  .shadow-primary-lg {
    box-shadow: 0 8px 24px #0d6efd59;
  }

  .shadow-success {
    box-shadow: 0 4px 12px #16a34a40;
  }

  .shadow-inner-light {
    box-shadow: inset 0 2px 4px #ffffff1a;
  }

  .shadow-inner-dark {
    box-shadow: inset 0 2px 4px #0000001a;
  }

  .glow-brand {
    box-shadow: 0 0 20px #ff6b3566, 0 0 40px #ff6b3533;
  }

  .glow-primary {
    box-shadow: 0 0 20px #0d6efd66, 0 0 40px #0d6efd33;
  }

  .glow-success {
    box-shadow: 0 0 20px #16a34a66, 0 0 40px #16a34a33;
  }

  .animated-gradient {
    background: linear-gradient(-45deg, var(--primary), var(--secondary), var(--success), var(--warning));
    background-size: 400% 400%;
    animation: 15s infinite gradient-shift;
  }

  @keyframes gradient-shift {
    0% {
      background-position: 0%;
    }

    50% {
      background-position: 100%;
    }

    100% {
      background-position: 0%;
    }
  }

  .pulse-brand {
    animation: 2s cubic-bezier(.4, 0, .6, 1) infinite pulse-brand;
  }

  @keyframes pulse-brand {
    0%, 100% {
      opacity: 1;
    }

    50% {
      opacity: .7;
    }
  }

  .pulse-ring {
    position: relative;
  }

  .pulse-ring:before {
    content: "";
    border-radius: inherit;
    opacity: 0;
    border: 2px solid;
    animation: 2s cubic-bezier(0, 0, .2, 1) infinite pulse-ring;
    position: absolute;
    inset: 0;
  }

  @keyframes pulse-ring {
    0% {
      opacity: 1;
      transform: scale(1);
    }

    100% {
      opacity: 0;
      transform: scale(1.5);
    }
  }

  .shimmer {
    position: relative;
    overflow: hidden;
  }

  .shimmer:after {
    content: "";
    background: linear-gradient(90deg, #fff0 0%, #fff3 20%, #ffffff80 60%, #fff0 100%);
    animation: 2s infinite shimmer;
    position: absolute;
    inset: 0;
    transform: translateX(-100%);
  }

  @keyframes shimmer {
    100% {
      transform: translateX(100%);
    }
  }

  .bounce-in {
    animation: .6s cubic-bezier(.68, -.55, .265, 1.55) bounce-in;
  }

  @keyframes bounce-in {
    0% {
      opacity: 0;
      transform: scale(.3);
    }

    50% {
      opacity: 1;
      transform: scale(1.05);
    }

    70% {
      transform: scale(.9);
    }

    100% {
      transform: scale(1);
    }
  }

  .bounce-gentle {
    animation: 2s ease-in-out infinite bounce-gentle;
  }

  @keyframes bounce-gentle {
    0%, 100% {
      transform: translateY(0);
    }

    50% {
      transform: translateY(-10px);
    }
  }

  .wiggle {
    animation: .5s ease-in-out wiggle;
  }

  @keyframes wiggle {
    0%, 100% {
      transform: rotate(0);
    }

    25% {
      transform: rotate(-5deg);
    }

    75% {
      transform: rotate(5deg);
    }
  }

  .shake {
    animation: .5s cubic-bezier(.36, .07, .19, .97) shake;
  }

  @keyframes shake {
    0%, 100% {
      transform: translateX(0);
    }

    10%, 30%, 50%, 70%, 90% {
      transform: translateX(-10px);
    }

    20%, 40%, 60%, 80% {
      transform: translateX(10px);
    }
  }

  .zoom-in-hover:hover {
    transition: transform .3s cubic-bezier(.34, 1.56, .64, 1);
    transform: scale(1.05);
  }

  .zoom-in-hover-lg:hover {
    transition: transform .3s cubic-bezier(.34, 1.56, .64, 1);
    transform: scale(1.1);
  }

  .flip-horizontal {
    animation: .6s cubic-bezier(.455, .03, .515, .955) flip-horizontal;
  }

  @keyframes flip-horizontal {
    0% {
      transform: rotateY(0);
    }

    100% {
      transform: rotateY(360deg);
    }
  }

  .focus-within-ring:focus-within {
    outline: 2px solid var(--ring);
    outline-offset: 2px;
  }

  .focus-within-shadow:focus-within {
    box-shadow: 0 0 0 3px var(--ring);
  }

  .hover-lift {
    transition: transform .3s, box-shadow .3s;
  }

  .hover-lift:hover {
    box-shadow: var(--card-shadow-lg);
    transform: translateY(-4px);
  }

  .hover-lift-sm {
    transition: transform .3s, box-shadow .3s;
  }

  .hover-lift-sm:hover {
    box-shadow: var(--card-shadow);
    transform: translateY(-2px);
  }

  .border-gradient-animated {
    background: var(--background);
    border-radius: var(--radius);
    position: relative;
    overflow: hidden;
  }

  .border-gradient-animated:before {
    content: "";
    background: linear-gradient(45deg, var(--primary), var(--secondary), var(--success), var(--warning));
    border-radius: inherit;
    -webkit-mask-composite: xor;
    background-size: 300% 300%;
    padding: 2px;
    animation: 4s linear infinite gradient-rotate;
    position: absolute;
    inset: 0;
    mask-image: linear-gradient(#fff 0 0), linear-gradient(#fff 0 0);
    mask-position: 0 0, 0 0;
    mask-size: auto, auto;
    mask-repeat: repeat, repeat;
    mask-clip: content-box, border-box;
    mask-origin: content-box, border-box;
    mask-composite: exclude;
    mask-mode: match-source, match-source;
  }

  @keyframes gradient-rotate {
    0% {
      background-position: 0%;
    }

    50% {
      background-position: 100%;
    }

    100% {
      background-position: 0%;
    }
  }

  .will-change-transform {
    will-change: transform;
  }

  .will-change-opacity {
    will-change: opacity;
  }

  .will-change-auto {
    will-change: auto;
  }

  .cursor-help {
    cursor: help;
  }

  .cursor-wait {
    cursor: wait;
  }

  .cursor-crosshair {
    cursor: crosshair;
  }

  .cursor-not-allowed {
    cursor: not-allowed;
  }

  .cursor-zoom-in {
    cursor: zoom-in;
  }

  .cursor-zoom-out {
    cursor: zoom-out;
  }

  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }

  .select-text {
    -webkit-user-select: text;
    user-select: text;
  }

  .select-all {
    -webkit-user-select: all;
    user-select: all;
  }

  .writing-vertical-rl {
    writing-mode: vertical-rl;
  }

  .writing-vertical-lr {
    writing-mode: vertical-lr;
  }

  .mix-blend-multiply {
    mix-blend-mode: multiply;
  }

  .mix-blend-screen {
    mix-blend-mode: screen;
  }

  .mix-blend-overlay {
    mix-blend-mode: overlay;
  }

  .mix-blend-darken {
    mix-blend-mode: darken;
  }

  .mix-blend-lighten {
    mix-blend-mode: lighten;
  }

  .bg-fixed {
    background-attachment: fixed;
  }

  .bg-local {
    background-attachment: local;
  }

  .bg-scroll {
    background-attachment: scroll;
  }

  .object-contain {
    object-fit: contain;
  }

  .object-cover {
    object-fit: cover;
  }

  .object-fill {
    object-fit: fill;
  }

  .object-none {
    object-fit: none;
  }

  .object-scale-down {
    object-fit: scale-down;
  }

  .speech-bubble {
    background: var(--card);
    border: 1px solid var(--border);
    border-radius: var(--radius-lg);
    margin-bottom: 1.5rem;
    padding: 1rem;
    position: relative;
  }

  .speech-bubble:before {
    content: "";
    border-left: 10px solid #0000;
    border-right: 10px solid #0000;
    border-top: 10px solid var(--card);
    width: 0;
    height: 0;
    position: absolute;
    bottom: -10px;
    left: 30px;
  }

  .speech-bubble:after {
    content: "";
    border-left: 11px solid #0000;
    border-right: 11px solid #0000;
    border-top: 11px solid var(--border);
    width: 0;
    height: 0;
    position: absolute;
    bottom: -11px;
    left: 29px;
  }

  .choice-card {
    background: var(--card);
    border: 2px solid var(--border);
    border-radius: var(--radius-lg);
    cursor: pointer;
    padding: 1.5rem;
    transition: all .3s cubic-bezier(.4, 0, .2, 1);
    position: relative;
  }

  .choice-card:hover {
    border-color: var(--primary);
    transform: translateY(-2px);
    box-shadow: 0 8px 16px #0d6efd26;
  }

  .choice-card.selected {
    border-color: var(--primary);
    background: var(--primary-50);
  }

  .choice-card.disabled {
    opacity: .5;
    cursor: not-allowed;
  }

  .choice-card.disabled:hover {
    box-shadow: none;
    transform: none;
  }

  .game-progress {
    background: var(--muted);
    border-radius: 9999px;
    width: 100%;
    height: 8px;
    position: relative;
    overflow: hidden;
  }

  .game-progress-bar {
    background: var(--brand-gradient);
    border-radius: inherit;
    height: 100%;
    transition: width .5s cubic-bezier(.4, 0, .2, 1);
  }

  .game-progress-bar.animated {
    animation: 2s ease-in-out infinite progress-pulse;
  }

  @keyframes progress-pulse {
    0%, 100% {
      opacity: 1;
    }

    50% {
      opacity: .7;
    }
  }

  .stakeholder-badge {
    background: var(--primary-50);
    border: 1px solid var(--primary-200);
    color: var(--primary-700);
    border-radius: 9999px;
    align-items: center;
    gap: .5rem;
    padding: .5rem 1rem;
    font-size: .875rem;
    font-weight: 500;
    transition: all .3s;
    display: inline-flex;
  }

  .stakeholder-badge:hover {
    background: var(--primary-100);
    transform: scale(1.05);
  }

  .impact-positive {
    color: var(--success);
    font-weight: 600;
  }

  .impact-negative {
    color: var(--destructive);
    font-weight: 600;
  }

  .impact-neutral {
    color: var(--muted-foreground);
  }

  .achievement-unlock {
    animation: 1s cubic-bezier(.68, -.55, .265, 1.55) achievement-unlock;
  }

  @keyframes achievement-unlock {
    0% {
      opacity: 0;
      transform: scale(0)rotate(-180deg);
    }

    50% {
      transform: scale(1.2)rotate(10deg);
    }

    100% {
      opacity: 1;
      transform: scale(1)rotate(0);
    }
  }

  .skill-level {
    gap: .25rem;
    display: flex;
  }

  .skill-level-dot {
    background: var(--muted);
    border-radius: 50%;
    width: 8px;
    height: 8px;
    transition: all .3s;
  }

  .skill-level-dot.active {
    background: var(--success);
    box-shadow: 0 0 8px var(--success);
  }

  .player-card {
    background: var(--card);
    border: 2px solid var(--border);
    border-radius: var(--radius-lg);
    padding: 1rem;
    transition: all .3s;
    position: relative;
  }

  .player-card.ready {
    border-color: var(--success);
    background: var(--success-50);
  }

  .player-card.host:before {
    content: "👑";
    font-size: 1.5rem;
    position: absolute;
    top: -8px;
    right: -8px;
  }

  .typing-indicator {
    gap: .25rem;
    padding: .5rem;
    display: flex;
  }

  .typing-dot {
    background: var(--primary);
    border-radius: 50%;
    width: 8px;
    height: 8px;
    animation: 1.4s infinite typing;
  }

  .typing-dot:nth-child(2) {
    animation-delay: .2s;
  }

  .typing-dot:nth-child(3) {
    animation-delay: .4s;
  }

  @keyframes typing {
    0%, 60%, 100% {
      opacity: .5;
      transform: translateY(0);
    }

    30% {
      opacity: 1;
      transform: translateY(-10px);
    }
  }

  .connection-status {
    align-items: center;
    gap: .5rem;
    font-size: .875rem;
    display: inline-flex;
  }

  .connection-dot {
    background: var(--muted);
    border-radius: 50%;
    width: 10px;
    height: 10px;
  }

  .connection-dot.online {
    background: var(--success);
    box-shadow: 0 0 8px var(--success);
    animation: 2s ease-in-out infinite pulse-gentle;
  }

  .connection-dot.offline {
    background: var(--destructive);
  }

  @keyframes pulse-gentle {
    0%, 100% {
      opacity: 1;
    }

    50% {
      opacity: .5;
    }
  }

  @media (prefers-contrast: high) {
    :focus-visible {
      outline: 4px solid var(--ring);
      outline-offset: 4px;
    }

    .card-modern, .card-elevated, .choice-card {
      border-width: 3px;
    }

    button, a, input, select, textarea {
      border-width: 2px;
    }
  }

  @media (prefers-reduced-transparency) {
    .glass, .glass-dark, .backdrop-blur-xs, .backdrop-blur-sm, .backdrop-blur-md, .backdrop-blur-lg, .backdrop-blur-xl {
      -webkit-backdrop-filter: none;
      background: var(--background);
      border: 1px solid var(--border);
    }
  }

  .sr-only-focusable:not(:focus):not(:focus-within) {
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    position: absolute;
    overflow: hidden;
  }

  .focus-trap {
    position: relative;
  }

  .focus-trap:focus-within {
    outline: none;
  }

  .kbd {
    color: var(--foreground);
    background: var(--muted);
    border: 1px solid var(--border);
    border-radius: .375rem;
    padding: .25rem .5rem;
    font-family: ui-monospace, SFMono-Regular, monospace;
    font-size: .75rem;
    font-weight: 600;
    line-height: 1;
    display: inline-block;
    box-shadow: 0 1px 2px #0000000d;
  }

  .announcement-bar {
    background: var(--primary-50);
    border-left: 4px solid var(--primary);
    border-radius: var(--radius);
    margin-bottom: 1rem;
    padding: .75rem 1rem;
    position: relative;
  }

  .announcement-bar.warning {
    background: var(--warning-50);
    border-left-color: var(--warning);
  }

  .announcement-bar.success {
    background: var(--success-50);
    border-left-color: var(--success);
  }

  .announcement-bar.error {
    background: var(--destructive-50);
    border-left-color: var(--destructive);
  }

  @media print {
    nav, .navigation, .fab, .back-to-top, .scroll-progress, .cookie-consent, .pwa-installer, button:not(.print-show), .game-action-bar, .mobile-only, .notification-center, .command-palette {
      display: none !important;
    }

    body {
      color: #000;
      background: #fff;
      font-size: 12pt;
      line-height: 1.5;
    }

    .card-modern, .card-elevated, .choice-card {
      box-shadow: none;
      page-break-inside: avoid;
      border: 1px solid #000;
    }

    section {
      page-break-after: always;
    }

    h1, h2, h3, h4, h5, h6 {
      page-break-after: avoid;
      page-break-inside: avoid;
    }

    a[href^="http"]:after {
      content: " (" attr(href) ")";
      font-size: .8em;
      font-style: italic;
    }

    a[href^="#"]:after {
      content: "";
    }

    .external-link:after {
      content: " (" attr(href) ")";
    }
  }
}

:root {
  --font-size: 16px;
  --brand-orange: #ff6b35;
  --brand-red: #e63946;
  --brand-gradient: linear-gradient(135deg, #ff6b35 0%, #e63946 100%);
  --brand-bootstrap-blue: #0d6efd;
  --brand-austria-red: #c8102e;
  --brand-austria-white: #fff;
  --background: #fafbfc;
  --background-alt: #f8f9fa;
  --surface: #fff;
  --surface-elevated: #fff;
  --surface-hover: #0d6efd0a;
  --foreground: #1a202c;
  --foreground-muted: #4a5568;
  --foreground-subtle: #718096;
  --primary: #0d6efd;
  --primary-50: #f0f6ff;
  --primary-100: #e0edff;
  --primary-200: #c7ddff;
  --primary-300: #a5c8ff;
  --primary-400: #7aa7ff;
  --primary-500: #5b8fff;
  --primary-600: #0d6efd;
  --primary-700: #0056d6;
  --primary-800: #004bb8;
  --primary-900: #003d99;
  --primary-foreground: #fff;
  --primary-hover: #0056d6;
  --primary-active: #004bb8;
  --secondary: #ff6b35;
  --secondary-50: #fff5f2;
  --secondary-100: #ffe8e0;
  --secondary-200: #ffd5c7;
  --secondary-300: #ffb8a0;
  --secondary-400: #ff9068;
  --secondary-500: #ff6b35;
  --secondary-600: #e63946;
  --secondary-700: #cc2936;
  --secondary-800: #b81e2b;
  --secondary-900: #a11825;
  --secondary-foreground: #fff;
  --accent: #f1f5f9;
  --accent-foreground: #334155;
  --accent-hover: #e2e8f0;
  --muted: #f8fafc;
  --muted-foreground: #64748b;
  --muted-hover: #f1f5f9;
  --border: #e2e8f0;
  --border-muted: #f1f5f9;
  --input: transparent;
  --input-background: #fff;
  --input-border: #d1d5db;
  --input-border-focus: #0d6efd;
  --switch-background: #cbd5e1;
  --destructive: #dc2626;
  --destructive-foreground: #fff;
  --destructive-50: #fef2f2;
  --destructive-100: #fee2e2;
  --success: #16a34a;
  --success-foreground: #fff;
  --success-50: #f0fdf4;
  --success-100: #dcfce7;
  --warning: #ca8a04;
  --warning-foreground: #fff;
  --warning-50: #fefce8;
  --warning-100: #fef3c7;
  --card: #fff;
  --card-foreground: #1a202c;
  --card-border: #e2e8f0;
  --card-shadow: 0 1px 3px 0 #0000001a, 0 1px 2px 0 #0000000f;
  --card-shadow-lg: 0 10px 15px -3px #0000001a, 0 4px 6px -2px #0000000d;
  --popover: #fff;
  --popover-foreground: #1a202c;
  --popover-border: #e2e8f0;
  --popover-shadow: 0 20px 25px -5px #0000001a, 0 10px 10px -5px #0000000a;
  --font-weight-light: 300;
  --font-weight-normal: 400;
  --font-weight-medium: 500;
  --font-weight-semibold: 600;
  --font-weight-bold: 700;
  --radius: .75rem;
  --radius-sm: .5rem;
  --radius-lg: 1rem;
  --radius-xl: 1.5rem;
  --ring: #93c5fd;
  --ring-offset: #fff;
  --chart-1: #0d6efd;
  --chart-2: #ff6b35;
  --chart-3: #e63946;
  --chart-4: #16a34a;
  --chart-5: #ca8a04;
  --sidebar: #f8fafc;
  --sidebar-foreground: #334155;
  --sidebar-primary: #0d6efd;
  --sidebar-primary-foreground: #fff;
  --sidebar-accent: #f1f5f9;
  --sidebar-accent-foreground: #475569;
  --sidebar-border: #e2e8f0;
  --sidebar-ring: #93c5fd;
}

.dark {
  --background: #0f172a;
  --background-alt: #1e293b;
  --surface: #1e293b;
  --surface-elevated: #334155;
  --surface-hover: #3b82f61a;
  --foreground: #f1f5f9;
  --foreground-muted: #cbd5e1;
  --foreground-subtle: #94a3b8;
  --primary: #3b82f6;
  --primary-50: #1e293b;
  --primary-100: #334155;
  --primary-200: #475569;
  --primary-300: #64748b;
  --primary-400: #94a3b8;
  --primary-500: #cbd5e1;
  --primary-600: #3b82f6;
  --primary-700: #2563eb;
  --primary-800: #1d4ed8;
  --primary-900: #1e40af;
  --primary-foreground: #fff;
  --primary-hover: #2563eb;
  --primary-active: #1d4ed8;
  --secondary: #f97316;
  --secondary-50: #1e293b;
  --secondary-100: #374151;
  --secondary-200: #4b5563;
  --secondary-300: #6b7280;
  --secondary-400: #9ca3af;
  --secondary-500: #f97316;
  --secondary-600: #ea580c;
  --secondary-700: #dc2626;
  --secondary-800: #b91c1c;
  --secondary-900: #991b1b;
  --secondary-foreground: #fff;
  --accent: #334155;
  --accent-foreground: #f1f5f9;
  --accent-hover: #475569;
  --muted: #1e293b;
  --muted-foreground: #94a3b8;
  --muted-hover: #334155;
  --border: #334155;
  --border-muted: #1e293b;
  --input: transparent;
  --input-background: #1e293b;
  --input-border: #475569;
  --input-border-focus: #3b82f6;
  --switch-background: #475569;
  --destructive: #ef4444;
  --destructive-foreground: #fff;
  --destructive-50: #1e293b;
  --destructive-100: #374151;
  --success: #22c55e;
  --success-foreground: #fff;
  --success-50: #1e293b;
  --success-100: #374151;
  --warning: #eab308;
  --warning-foreground: #000;
  --warning-50: #1e293b;
  --warning-100: #374151;
  --card: #1e293b;
  --card-foreground: #f1f5f9;
  --card-border: #334155;
  --card-shadow: 0 1px 3px 0 #0000004d, 0 1px 2px 0 #0003;
  --card-shadow-lg: 0 10px 15px -3px #0000004d, 0 4px 6px -2px #0003;
  --popover: #1e293b;
  --popover-foreground: #f1f5f9;
  --popover-border: #334155;
  --popover-shadow: 0 20px 25px -5px #0006, 0 10px 10px -5px #0003;
  --ring: #3b82f6;
  --ring-offset: #0f172a;
  --chart-1: #3b82f6;
  --chart-2: #f97316;
  --chart-3: #ef4444;
  --chart-4: #22c55e;
  --chart-5: #eab308;
  --sidebar: #1e293b;
  --sidebar-foreground: #cbd5e1;
  --sidebar-primary: #3b82f6;
  --sidebar-primary-foreground: #fff;
  --sidebar-accent: #334155;
  --sidebar-accent-foreground: #f1f5f9;
  --sidebar-border: #334155;
  --sidebar-ring: #3b82f6;
}

html {
  font-size: var(--font-size);
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}

@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}

@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}

@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}

@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}

@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-gradient-position {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}

@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-leading {
  syntax: "*";
  inherits: false
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-tracking {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}

@property --tw-ease {
  syntax: "*";
  inherits: false
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}

@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}
