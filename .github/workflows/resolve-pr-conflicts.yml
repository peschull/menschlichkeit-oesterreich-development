name: Resolve PR Conflicts via Dependabot

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to resolve conflicts for'
        required: true
        default: '69'
      command:
        description: 'Dependabot command to run'
        required: true
        default: '@dependabot rebase'
        type: choice
        options:
          - '@dependabot rebase'
          - '@dependabot recreate'
          - '@dependabot merge'

jobs:
  post-dependabot-command:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Post Dependabot Command
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ github.event.inputs.pr_number }};
            const command = '${{ github.event.inputs.command }}';

            console.log(`Posting command to PR #${prNumber}: ${command}`);

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: command
            });

            console.log('✅ Comment posted successfully!');
            console.log(`View PR: https://github.com/${context.repo.owner}/${context.repo.repo}/pull/${prNumber}`);

      - name: Wait for Dependabot Response
        run: |
          echo "Waiting 30 seconds for Dependabot to process the command..."
          sleep 30

      - name: Check PR Status
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ github.event.inputs.pr_number }};

            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });

            console.log(`PR Status: ${pr.mergeable_state}`);
            console.log(`Mergeable: ${pr.mergeable}`);
            console.log(`Conflicts: ${pr.mergeable === false ? 'Yes' : 'No'}`);

            if (pr.mergeable_state === 'clean') {
              console.log('✅ PR is ready to merge!');
            } else if (pr.mergeable_state === 'unstable') {
              console.log('⚠️ PR has failing checks');
            } else if (pr.mergeable_state === 'dirty') {
              console.log('❌ PR still has conflicts - may need more time');
            } else {
              console.log(`ℹ️ PR state: ${pr.mergeable_state}`);
            }
