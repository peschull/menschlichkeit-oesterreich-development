# GitHub Actions CI/CD Pipeline f√ºr menschlichkeit-oesterreich.at
name: üöÄ Deploy to Plesk Production

on:
    push:
        branches:
            - main
            - production
    pull_request:
        branches:
            - main

env:
    NODE_VERSION: "22.20.0"
    PYTHON_VERSION: "3.13.7"
    PHP_VERSION: "8.3"

jobs:
    # üß™ Tests und Qualit√§tspr√ºfungen
    test-and-validate:
        name: üß™ Tests & Quality Checks
        runs-on: ubuntu-latest

        steps:
            - name: üì• Checkout Code
              uses: actions/checkout@v5

            - name: üü¢ Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"

            - name: üêç Setup Python
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ env.PYTHON_VERSION }}

            - name: üêò Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ env.PHP_VERSION }}
                  extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, json

            - name: üì¶ Install Dependencies
              run: |
                  npm ci
                  pip install -r api.menschlichkeit-oesterreich.at/requirements.txt
                  cd crm.menschlichkeit-oesterreich.at && composer install --no-dev --optimize-autoloader

            - name: üîç Run ESLint
              run: npm run lint

            - name: üé® Run Prettier Check
              run: npx prettier --check .

            - name: üß™ Run Unit Tests
              run: npm run test

            - name: üé≠ Run E2E Tests
              run: npx playwright test

            - name: üêò Run PHP Tests
              run: cd crm.menschlichkeit-oesterreich.at && ./vendor/bin/phpunit

            - name: üêç Run Python Tests
              run: cd api.menschlichkeit-oesterreich.at && python -m pytest

    # üîß Build Assets
    build:
        name: üîß Build Production Assets
        runs-on: ubuntu-latest
        needs: test-and-validate

        steps:
            - name: üì• Checkout Code
              uses: actions/checkout@v5

            - name: üü¢ Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"

            - name: üì¶ Install Dependencies
              run: npm ci

            - name: üèóÔ∏è Build Frontend
              run: |
                  cd frontend && npm run build

            - name: üéÆ Build Games
              run: |
                  cd web && npm run build:games

            - name: üìÅ Upload Build Artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-assets
                  path: |
                      frontend/dist/
                      web/games/dist/
                  retention-days: 7

    # üöÄ Deployment zu Plesk
    deploy:
        name: üöÄ Deploy to Plesk Production
        runs-on: ubuntu-latest
        needs: [test-and-validate, build]
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

        environment:
            name: production
            url: https://menschlichkeit-oesterreich.at

        steps:
            - name: üì• Checkout Code
              uses: actions/checkout@v5

            - name: üìÅ Download Build Artifacts
              uses: actions/download-artifact@v4
              with:
                  name: build-assets

            - name: üîë Setup SSH Key
              run: |
                  mkdir -p ~/.ssh
                  echo "${{ secrets.PLESK_SSH_KEY }}" > ~/.ssh/id_ed25519
                  chmod 600 ~/.ssh/id_ed25519
                  ssh-keyscan -H ${{ secrets.PLESK_HOST }} >> ~/.ssh/known_hosts

            - name: üì§ Deploy via SFTP
              run: |
                  # Frontend Deployment
                  rsync -avz --delete \
                    -e "ssh -i ~/.ssh/id_ed25519 -p 22" \
                    frontend/dist/ \
                    ${{ secrets.PLESK_USER }}@${{ secrets.PLESK_HOST }}:/var/www/vhosts/menschlichkeit-oesterreich.at/httpdocs/

                  # Games Deployment
                  rsync -avz --delete \
                    -e "ssh -i ~/.ssh/id_ed25519 -p 22" \
                    web/games/ \
                    ${{ secrets.PLESK_USER }}@${{ secrets.PLESK_HOST }}:/var/www/vhosts/menschlichkeit-oesterreich.at/httpdocs/games/

                  # API Deployment
                  rsync -avz --delete \
                    --exclude='.env' --exclude='logs' --exclude='cache' \
                    -e "ssh -i ~/.ssh/id_ed25519 -p 22" \
                    api.menschlichkeit-oesterreich.at/ \
                    ${{ secrets.PLESK_USER }}@${{ secrets.PLESK_HOST }}:/var/www/vhosts/api.menschlichkeit-oesterreich.at/httpdocs/

            - name: üóÇÔ∏è Database Migration
              run: |
                  ssh -i ~/.ssh/id_ed25519 ${{ secrets.PLESK_USER }}@${{ secrets.PLESK_HOST }} << 'EOF'
                    cd /var/www/vhosts/menschlichkeit-oesterreich.at/httpdocs

                    # WordPress Database Update
                    wp-cli core update-db --allow-root

                    # Laravel Migrations
                    cd ../api.menschlichkeit-oesterreich.at/httpdocs
                    php artisan migrate --force
                    php artisan config:cache
                    php artisan route:cache

                    # CiviCRM Updates (falls erforderlich)
                    # drush civicrm-upgrade-db
                  EOF

            - name: üßπ Cleanup & Cache Clear
              run: |
                  ssh -i ~/.ssh/id_ed25519 ${{ secrets.PLESK_USER }}@${{ secrets.PLESK_HOST }} << 'EOF'
                    # WordPress Cache Clear
                    wp-cli cache flush --allow-root

                    # Laravel Cache Clear
                    cd /var/www/vhosts/api.menschlichkeit-oesterreich.at/httpdocs
                    php artisan cache:clear
                    php artisan view:clear

                    # Plesk Cache Restart (falls m√∂glich)
                    # plesk bin site --update menschlichkeit-oesterreich.at -php_handler_id plesk-php83-fpm
                  EOF

            - name: ü©∫ Health Check
              run: |
                  # WordPress Health Check
                  curl -f https://menschlichkeit-oesterreich.at/wp-json/wp/v2/posts?per_page=1 || exit 1

                  # API Health Check
                  curl -f https://api.menschlichkeit-oesterreich.at/health || exit 1

                  # Games Health Check
                  curl -f https://menschlichkeit-oesterreich.at/games/ || exit 1

    # üìä Post-Deployment Monitoring
    monitor:
        name: üìä Post-Deployment Monitoring
        runs-on: ubuntu-latest
        needs: deploy
        if: always()

        steps:
            - name: üìà Performance Test
              run: |
                  # Lighthouse CI oder √§hnliche Performance-Tests
                  npx @lhci/cli@latest autorun || true

            - name: üîî Slack Notification
              if: always()
              uses: 8398a7/action-slack@v3
              with:
                  status: ${{ job.status }}
                  channel: "#deployments"
                  webhook_url: ${{ secrets.SLACK_WEBHOOK }}
                  fields: repo,message,commit,author,action,eventName,ref,workflow

            - name: üìß Email Notification
              if: failure()
              uses: dawidd6/action-send-mail@v3
              with:
                  server_address: ${{ secrets.SMTP_HOST }}
                  server_port: 587
                  username: ${{ secrets.SMTP_USER }}
                  password: ${{ secrets.SMTP_PASS }}
                  subject: "üö® Deployment Failed: menschlichkeit-oesterreich.at"
                  to: dev@menschlichkeit-oesterreich.at
                  from: github-actions@menschlichkeit-oesterreich.at
                  body: |
                      Deployment zu Plesk fehlgeschlagen!

                      Repository: ${{ github.repository }}
                      Commit: ${{ github.sha }}
                      Branch: ${{ github.ref }}

                      Bitte Logs pr√ºfen: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
